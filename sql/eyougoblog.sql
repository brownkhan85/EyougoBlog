-- MySQL dump 10.13  Distrib 5.1.63, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: eyougoblog
-- ------------------------------------------------------
-- Server version	5.1.63-0+squeeze1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `BLOG_ABOUTS`
--

DROP TABLE IF EXISTS `BLOG_ABOUTS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BLOG_ABOUTS` (
  `ID` varchar(128) NOT NULL,
  `ABOUTVALUE` text,
  `BASERANK` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BLOG_ABOUTS`
--

LOCK TABLES `BLOG_ABOUTS` WRITE;
/*!40000 ALTER TABLE `BLOG_ABOUTS` DISABLE KEYS */;
INSERT INTO `BLOG_ABOUTS` VALUES ('aboutGravatar','meihongyuan@163.com',-1),('aboutMe','思考者，懒猪，瞌睡虫，夜猫子，乐天派。&nbsp;功夫熊猫脑残粉。<br />\r\n喜欢解决各种BUG，闲聊各种汽车，玩各种游戏，睡各种觉&hellip;&hellip;<br />\r\n毕业于客车黄埔军校中的车辆工程专业，曾经是整车装配工艺师。&nbsp;<br />\r\n六年软件开发相关经验，两年小团队技术管理经验。主要技能是Java和相关的，一点JavaScript，一点VC++，一点Flex，刚学的一点Python，等等&hellip;&hellip;最后还有汽车（虽然基本还给老师了）&hellip;&hellip;&nbsp;<br />\r\n现任职于创新工场应用汇<a href=\"http://www.appchina.com\" target=\"_blank\">www.appchina.com</a>。',-1),('aboutSite','&nbsp;介尼码是个坑！ 有空再填吧......',-1),('常用网名','...... ||eyougo',0),('真实名字','梅红园',1),('私人邮箱','meihongyuan(at)163.com',2),('新浪微博','<a href=\"http://weibo.com/meihongyuan\" target=\"_blank\">@梅红园</a>',3),('自我得瑟','梅花香自苦寒来，红得满园之时，便是大告成功之日。',4),('喜欢一句话','岂能尽如人意，但求无愧我心。',5);
/*!40000 ALTER TABLE `BLOG_ABOUTS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `BLOG_BLOGS`
--

DROP TABLE IF EXISTS `BLOG_BLOGS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BLOG_BLOGS` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `TITLE` varchar(255) NOT NULL DEFAULT '',
  `CONTENT` text NOT NULL,
  `DATE` datetime DEFAULT NULL,
  `BIT` int(11) DEFAULT NULL,
  `EMOTION` int(11) DEFAULT NULL,
  `CMTUSER` bit(1) DEFAULT NULL,
  `CATEGORY_ID` int(11) NOT NULL,
  `SUMMARY` text,
  `TOP` int(11) DEFAULT NULL,
  `ISDRAFT` bit(1) DEFAULT b'0',
  `COPYRIGHT` bit(1) DEFAULT b'0',
  `COMMENTSNUM` int(11) DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `CATEGORY_ID` (`CATEGORY_ID`),
  KEY `FK5F799614226D3F8` (`CATEGORY_ID`),
  CONSTRAINT `blog_blogs_fk` FOREIGN KEY (`CATEGORY_ID`) REFERENCES `BLOG_CATEGORYS` (`ID`),
  CONSTRAINT `FK5F799614226D3F8` FOREIGN KEY (`CATEGORY_ID`) REFERENCES `BLOG_CATEGORYS` (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 COMMENT='InnoDB free: 10240 kB; ';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BLOG_BLOGS`
--

LOCK TABLES `BLOG_BLOGS` WRITE;
/*!40000 ALTER TABLE `BLOG_BLOGS` DISABLE KEYS */;
INSERT INTO `BLOG_BLOGS` VALUES (9,'易游国单用户博客EyougoBlog 0.9.0alpha版诞生了！','<p>易游国博客EyougoBlog是一个以Java技术开发的开源单用户博客系统，目前使用Spring2.1+Struts2.1+Hibernate3.2等框架，采用FreeMarker及SiteMesh作为前台表现层，结合了JQuery、FCKEditor、JSCalendar、pager-taglib等组件。项目已加入GoogleCode中，地址为<a target=\"_blank\" href=\"http://eyougoblog.googlecode.com\">http://eyougoblog.googlecode.com</a>。<br />\r\n<br />\r\n目前的功能还相当基本，包括用户、日志、评论、留言、友情链接等，BUG也很多<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/75.gif\" />，正在不断完善，以后也会开发新功能<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/31.gif\" />。所以还是算alpha版吧，尽管我想让它开源，但还是等觉得差不多了再打包发布什么的，嗯，别叫您笑话咱这个菜鸟<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/39.gif\" />。当然您非要看源码，可以到上面的本项目GoogleCode地址去下载<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/01.gif\" />。<br />\r\n用堂堂的Java开发这么个小玩意，似乎有点高射炮打蚊子的嫌疑<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/28.gif\" />。其实没想过发布什么，只是想占一块地盘实践下自己学到的东西，或者说通过这样的实践学习更多的东西<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/42.gif\" />，顺便搞一个自己的博客，有啥想法就写写。因为我只是个不久前才从汽车技术行业转进了Java开发圈子的菜鸟<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/45.gif\" />，要学的东西还很多很多。<br />\r\n呃，一个人从头到尾折腾出这么个玩意，边学习边一行一行地写，还是挺费力的<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/30.gif\" />。哦，对，管理员后台界面是采用易心博客的，懒得弄后台界面了<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/38.gif\" />。<br />\r\n<br />\r\nPS：界面很漂亮吧，这可是我邀请国内著名网页设计师专门搞的，哈哈<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/21.gif\" />。</p>','2009-01-07 01:29:00',820,1,'\0',7,'易游国博客EyougoBlog是一个以Java技术开发的开源单用户博客系统，目前使用Spring2.1+Struts2.1+Hibernate3.2等框架，采用FreeMarker及SiteMesh作为前台表现层，结合了JQuery、FCKEditor、JSCalendar、pager-taglib等组件。项目已加入GoogleCode中，地址为<a target=\"_blank\" href=\"http://eyougoblog.googlecode.com\">http://eyougoblog.googlecode.com</a>。',0,'\0','\0',2),(10,'庆祝我断断续续开发了N久N久的博客终于上线……','<p>业余时间搞了快1年了，断断续续的，不说了，都是眼泪啊<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/06.gif\" />。</p>','2010-01-13 00:45:00',637,1,'\0',8,'嗯，困<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/38.gif\" />。',0,'\0','\0',1),(11,'Struts2中的checkbox标签','在学习和应用Struts2的过程中，遇到了checkbox标签的问题，感觉checkbox标签是表单标签中比较特殊的一个，于是我通过Struts2的源码研究了一下这个标签的处理机制，也查看了些书上和网络上的资料，发现资料的讲解都比较简单，甚至某些书籍上还有错误。因此，我决定结合源码将这个checkbox表签的有关内容总结一下。','2010-01-14 17:09:18',0,1,'\0',7,'在学习和应用Struts2的过程中，遇到了checkbox标签的问题，感觉checkbox标签是表单标签中比较特殊的一个，于是我通过Struts2的源码研究了一下这个标签的处理机制，也查看了些书上和网络上的资料，发现资料的讲解都比较简单，甚至某些书籍上还有错误。因此，我决定结合源码将这个checkbox表签的有关内容总结一下。',0,'','',0),(12,'CXF+Spring+Hibernate+Struts2开发及应用WebService计数器详解（一）','<p><strong>前言（其实就是废话）：<br />\r\n</strong>博客建立一段时间了，一点有营养的内容都没有<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/39.gif\" />。终于忍受不了这种状况了，所以决定调整下开发计划，根据本博客的使用需求，开发出一个WebService计数器来，涉及到了CXF+Spring+Hibernate+Struts2。<br />\r\n说实话，CXF+Spring+Hibernate+Struts2虽然确实都用到了，但其实还是有点噱头的嫌疑。<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/25.gif\" /><br />\r\n<br />\r\n<strong>第一章：分析准备</strong><br />\r\n跟废话也距离不大远，不过建议还是看看&hellip;&hellip;&nbsp;<br />\r\n<br />\r\n<strong>1.业务需求：<br />\r\n</strong>服务端：可以在访问时对当前各访问量数据进行计数，并保存到数据库。可以调用对应方法查看保存在数据库中的各个信息。也就是服务端只负责计数和查看。需要面对多个用户，所以要在计数和查看的方法中对用户进行验证。<br />\r\n客户端：远程获取相应业务Bean，调用计数方法实现计数，或调用查看方法查看到各项数据。由客户端来负责是否计数的控制。<br />\r\n以本博客为例，就是需要在每一个新用户到达博客的时候调用远程方法计数，然后在后台可以查看到各项数据。</p>\r\n<p><strong>2.实现方案：</strong><br />\r\n服务端：使用Hibernate负责数据库保存，建立相应实体、Dao层和业务层Bean，使用Spring管理各个Bean，并引入CXF将业务Bean发布为WebService。结构为CXF+Spring+hibernate。<br />\r\n客户端：根据本博客的需求，由Spring通过CXF获取远程业务Bean注入到Struts2的一个Interceptor和查看数据的Action。Action调用对应查看方法显示数据，Interceptor负责验证是否为新访问，如果为新访问则调用计数方法。结构为CXF+Spring+Struts2。<br />\r\n<br />\r\n<strong>3.开发及测试环境：<br />\r\n</strong>MyEclipse6.0+Tomcat6.0+MySQL5.0<br />\r\n<br />\r\n<strong>4.使用框架及知识：</strong><br />\r\nspring2.1+Struts2.1+Hibernate3.2+Apache CXF2.2<br />\r\n需要大家对J2EE开发和相应的框架有基本的了解，懂点WebService的基本知识。<br />\r\n<br />\r\n<strong>第二章：服务端开发</strong><br />\r\n请听下回分解吧。东西倒是做好了，就是要把文字写出来，困，先睡了<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/38.gif\" />。</p>','2010-02-01 01:57:00',2601,1,'\0',7,'<strong>前言（其实就是废话）：</strong><br />\r\n博客建立一段时间了，一点有营养的内容都没有<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/39.gif\" />。终于忍受不了这种状况了，所以决定调整下开发计划，根据本博客的使用需求，开发出一个WebService计数器来，涉及到了CXF+Spring+Hibernate+Struts2。<br />\r\n<br />\r\n本篇目录：<br />\r\n<strong>第一章：分析准备<br />\r\n</strong>跟废话也距离不大远，不过建议还是进去看看&hellip;&hellip;&nbsp;<br />\r\n<strong>1.业务需求：<br />\r\n2.实现方案：<br />\r\n3.开发及测试环境：</strong><br />\r\n<strong>4.使用框架及知识：</strong><br />',0,'\0','',17),(13,'CXF+Spring+Hibernate+Struts2开发及应用WebService计数器详解（二）','<p><strong>第二章：服务端开发<br />\r\n</strong>其实服务端就是一个Web Project，只不过这个Web项目简单到只包括一个计数器功能和提供相应的WebService&hellip;&hellip;</p>\r\n<p><strong>1.环境建立</strong><br />\r\n编码统一为UTF-8。<br />\r\n首先新建一个Web项目，项目名字为Counter，加入spring和Hibernate相关jar包，还有连接MySQL的驱动Jar。<br />\r\n下载Apache CXF 2.2.5，把CXF和Jax-ws相关包加入项目中，所需要的包可以在CXF解压后的目录下/lib/WHICH_JARS文件中找到详细说明。<br />\r\n本例使用log4j作为log输出，所以加入log4j的包，并在src目录下建立META-INF/cxf/org.apache.cxf.Logger文件，里面写上一行&ldquo;org.apache.cxf.common.logging.Log4jLogger&rdquo;指定CXF使用的logger即可，然后按log4j的方式去配置就可以了。</p>\r\n<p><strong>2.使用Spring+Hibernate实现持久层</strong><br />\r\n和一般的Spring整合Hibernate开发没什么区别，简单的说下：</p>\r\n<p style=\"margin-left: 40px\"><strong>2.1在MySQL中建立相应表：<br />\r\n</strong></p>\r\n<pre class=\"brush: sql;\" title=\"code\">\r\nCREATE TABLE `eyougo_counters` (\r\n  `ID` INTEGER(11) NOT NULL AUTO_INCREMENT,\r\n  `USERNAME` VARCHAR(32) COLLATE utf8_general_ci NOT NULL DEFAULT \'\',\r\n  `PASSWORD` VARCHAR(32) COLLATE utf8_general_ci NOT NULL DEFAULT \'\',\r\n  `DAYCOUNT` INTEGER(11) NOT NULL DEFAULT \'0\',\r\n  `WEEKCOUNT` INTEGER(11) NOT NULL DEFAULT \'0\',\r\n  `MONTHCOUNT` INTEGER(11) NOT NULL DEFAULT \'0\',\r\n  `TOTALCOUNT` INTEGER(11) NOT NULL DEFAULT \'0\',\r\n  `REGISTERDATE` DATETIME DEFAULT NULL,\r\n  PRIMARY KEY (`ID`),\r\n  UNIQUE KEY `USERNAME` (`USERNAME`),\r\n  UNIQUE KEY `PASSWORD` (`PASSWORD`)\r\n)ENGINE=InnoDB\r\nCHARACTER SET \'utf8\' COLLATE \'utf8_general_ci\'</pre>\r\n<p style=\"margin-left: 40px\"><strong>2.2建立与数据表对应的实体类Counter，一个简单的JavaBean：</strong></p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\npackage com.eyougo.counter.entity;\r\n\r\nimport java.util.Date;\r\n\r\npublic class Counter{\r\n	private Integer id;\r\n	private String username;\r\n	private String password;\r\n	private Integer dayCount;\r\n	private Integer monthCount;\r\n	private Integer weekCount;\r\n	private Integer totalCount;\r\n	private Date registerDate;\r\n	/*\r\n	相应的get和set方法我省略了\r\n	*/\r\n}\r\n</pre>\r\n<p style=\"margin-left: 40px\"><strong>2.3建立Hibernate的实体类ormaping文件Counter.hbm.xml：</strong></p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n&lt;!DOCTYPE hibernate-mapping PUBLIC\r\n	&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;\r\n	&quot;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;&gt;\r\n&lt;hibernate-mapping package=&quot;com.eyougo.counter.entity&quot;&gt;\r\n  &lt;class name=&quot;com.eyougo.counter.entity.Counter&quot; table=&quot;EYOUGO_COUNTERS&quot; dynamic-update=&quot;true&quot;&gt;\r\n  	&lt;id name=&quot;id&quot;&gt;\r\n		&lt;generator class=&quot;identity&quot; /&gt;\r\n  	&lt;/id&gt;\r\n  	&lt;property name=&quot;username&quot; /&gt;\r\n  	&lt;property name=&quot;password&quot; /&gt;\r\n  	&lt;property name=&quot;dayCount&quot;  type=&quot;int&quot;/&gt;\r\n  	&lt;property name=&quot;weekCount&quot;  type=&quot;int&quot;/&gt;\r\n  	&lt;property name=&quot;monthCount&quot;   type=&quot;int&quot;/&gt;\r\n  	&lt;property name=&quot;totalCount&quot;   type=&quot;int&quot;/&gt;\r\n  	&lt;property name=&quot;registerDate&quot;&gt;\r\n  		&lt;column name=&quot;registerDate&quot; sql-type=&quot;datetime&quot;&gt;&lt;/column&gt;\r\n  	&lt;/property&gt;\r\n  &lt;/class&gt;\r\n&lt;/hibernate-mapping&gt;</pre>\r\n<p style=\"margin-left: 40px\"><strong>2.4在WEB-INF目录下建立applictionContext.xml作为spring配置文件。并在WEB-INF/web.xml中加入spring的配置：<br />\r\n</strong></p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n    &lt;context-param&gt;  \r\n        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;  \r\n        &lt;param-value&gt;/WEB-INF/applicationContext.xml&lt;/param-value&gt;  \r\n    &lt;/context-param&gt;  \r\n\r\n    &lt;listener&gt;  \r\n        &lt;listener-class&gt;  \r\n         org.springframework.web.context.ContextLoaderListener \r\n        &lt;/listener-class&gt; \r\n    &lt;/listener&gt;</pre>\r\n<p style=\"margin-left: 40px\"><strong>2.5在src目录下建立config.property负责保存数据库连接配置信息：</strong></p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\ndatasource.driverClassName=org.gjt.mm.mysql.Driver\r\ndatasource.url=jdbc:mysql://数据库地址:数据库端口默认3306/数据库名称?useUnicode=true&amp;characterEncoding=UTF-8\r\ndatasource.username=数据库用户名\r\ndatasource.password=数据库密码\r\n#目前只有1个连接就够用了\r\nc3p0.acquireIncrement=1\r\nc3p0.initialPoolSize=1\r\nc3p0.minPoolSize=1\r\nc3p0.maxPoolSize=1\r\nc3p0.maxStatements=100\r\nc3p0.numHelperThreads=10\r\nc3p0.maxIdleTime=600\r\nc3p0.testConnectionOnCheckin = true\r\nc3p0.automaticTestTable = c3p0TestTable\r\nc3p0.idleConnectionTestPeriod = 1800\r\nc3p0.checkoutTimeout=6000\r\nhibernate.dialect=org.hibernate.dialect.MySQLMyISAMDialect\r\nhibernate.jdbc.batch_size=25\r\nhibernate.jdbc.fetch_size=50\r\nhibernate.show_sql=true\r\nhibernate.connection.release_mode=after_transaction\r\nhibernate.hbm2ddl.auto=none\r\n</pre>\r\n<p style=\"margin-left: 40px\"><span style=\"font-family: Arial\"><strong>2.6相应在applictionContext.xml中配置好数据库连接（我这里已经引入了CXF需要的一些定义，以后加入也可以）：</strong></span></p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\r\n    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\r\n    xmlns:jaxws=&quot;http://cxf.apache.org/jaxws&quot;\r\n    xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\r\n	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd&quot;&gt;\r\n	&lt;!-- 引入CXF --&gt;\r\n	&lt;import resource=&quot;classpath:META-INF/cxf/cxf.xml&quot; /&gt;  \r\n    &lt;import resource=&quot;classpath:META-INF/cxf/cxf-extension-soap.xml&quot; /&gt;  \r\n    &lt;import resource=&quot;classpath:META-INF/cxf/cxf-servlet.xml&quot; /&gt; \r\n	\r\n	&lt;!-- 配置文件 --&gt;\r\n	&lt;bean id=&quot;placeholderConfig&quot;\r\n		class=&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&gt;\r\n		&lt;property name=&quot;location&quot;&gt;\r\n			&lt;value&gt;classpath:config.properties&lt;/value&gt;\r\n		&lt;/property&gt;\r\n	&lt;/bean&gt;\r\n	\r\n	&lt;!-- dataSource配置 --&gt;\r\n	&lt;bean id=&quot;dataSource&quot;\r\n		class=&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;\r\n		destroy-method=&quot;close&quot;&gt;\r\n		&lt;property name=&quot;driverClass&quot;&gt;\r\n			&lt;value&gt;${datasource.driverClassName}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;jdbcUrl&quot;&gt;\r\n			&lt;value&gt;${datasource.url}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;user&quot;&gt;\r\n			&lt;value&gt;${datasource.username}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;password&quot;&gt;\r\n			&lt;value&gt;${datasource.password}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;acquireIncrement&quot;&gt;\r\n			&lt;value&gt;${c3p0.acquireIncrement}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;initialPoolSize&quot;&gt;\r\n			&lt;value&gt;${c3p0.initialPoolSize}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;minPoolSize&quot;&gt;\r\n			&lt;value&gt;${c3p0.minPoolSize}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;maxPoolSize&quot;&gt;\r\n			&lt;value&gt;${c3p0.maxPoolSize}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;maxIdleTime&quot;&gt;\r\n			&lt;value&gt;${c3p0.maxIdleTime}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;maxStatements&quot;&gt;\r\n			&lt;value&gt;${c3p0.maxStatements}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;numHelperThreads&quot;&gt;\r\n			&lt;value&gt;${c3p0.numHelperThreads}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;testConnectionOnCheckin&quot;&gt;\r\n			&lt;value&gt;${c3p0.testConnectionOnCheckin}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;automaticTestTable&quot;&gt;\r\n			&lt;value&gt;${c3p0.automaticTestTable}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;idleConnectionTestPeriod&quot;&gt;\r\n			&lt;value&gt;${c3p0.idleConnectionTestPeriod}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;checkoutTimeout&quot;&gt;\r\n			&lt;value&gt;${c3p0.checkoutTimeout}&lt;/value&gt;\r\n		&lt;/property&gt;\r\n	&lt;/bean&gt;\r\n	\r\n	&lt;!-- sessionFactory配置 --&gt;\r\n	&lt;bean id=&quot;sessionFactory&quot; \r\n		class=&quot;org.springframework.orm.hibernate3.LocalSessionFactoryBean&quot;&gt;\r\n		&lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;\r\n		&lt;property name=&quot;mappingResources&quot;&gt;\r\n			&lt;list&gt;\r\n				&lt;value&gt;com/eyougo/counter/entity/Counter.hbm.xml&lt;/value&gt;\r\n			&lt;/list&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=&quot;hibernateProperties&quot;&gt;\r\n			&lt;props&gt;\r\n				&lt;prop key=&quot;hibernate.dialect&quot;&gt;\r\n					${hibernate.dialect}\r\n				&lt;/prop&gt;\r\n				&lt;prop key=&quot;hibernate.show_sql&quot;&gt;\r\n					${hibernate.show_sql}\r\n				&lt;/prop&gt;\r\n				&lt;prop key=&quot;hibernate.jdbc.fetch_size&quot;&gt;\r\n					${hibernate.jdbc.fetch_size}\r\n				&lt;/prop&gt;\r\n				&lt;prop key=&quot;hibernate.jdbc.batch_size&quot;&gt;\r\n					${hibernate.jdbc.batch_size}\r\n				&lt;/prop&gt;\r\n				 &lt;prop key=&quot;hibernate.hbm2ddl.auto&quot;&gt;\r\n				 	${hibernate.hbm2ddl.auto}\r\n				 &lt;/prop&gt;\r\n			&lt;/props&gt;\r\n		&lt;/property&gt;\r\n	&lt;/bean&gt;\r\n&lt;/beans&gt;</pre>\r\n<p style=\"margin-left: 40px\"><strong>2.7建立持久层接口CounterDao，编写相应的持久层代码CounterDaoHibernateImpl，这里我没有使用HibernateTamplate而是将SessionFactory注入到Dao中，其他就是基本的Hibernate操作代码了。</strong></p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\npackage com.eyougo.counter.dao;\r\n\r\nimport com.eyougo.counter.entity.Counter;\r\n\r\npublic interface CounterDao {\r\n	/**\r\n	 * 通过username查询计数器\r\n	 * @param username\r\n	 * @return\r\n	 */\r\n	Counter findCounterByUsername(String username);\r\n	/**\r\n	 * 保存计数器\r\n	 * @param counter\r\n	 * @return\r\n	 */\r\n	Counter saveCounter(Counter counter);\r\n	/**\r\n	 * 更新计数器\r\n	 * @param counter\r\n	 * @return\r\n	 */\r\n	Counter updateCounter(Counter counter);\r\n	/**\r\n	 * 删除计数器\r\n	 * @param counter\r\n	 * @return\r\n	 */\r\n	void deleteCounter(Counter counter);\r\n}</pre>\r\n<pre class=\"brush: java;\" title=\"code\">\r\npackage com.eyougo.counter.dao;\r\n\r\nimport java.util.List;\r\n\r\nimport org.hibernate.SessionFactory;\r\n\r\nimport com.eyougo.counter.entity.Counter;\r\n\r\npublic class CounterDaoHibernateImpl implements CounterDao {\r\n	private static final String LOAD_BY_USERNAME = &quot;from Counter where username = ?&quot;;\r\n	\r\n	private SessionFactory sessionFactory;\r\n	\r\n	public SessionFactory getSessionFactory() {\r\n		return sessionFactory;\r\n	}\r\n\r\n	public void setSessionFactory(SessionFactory sessionFactory) {\r\n		this.sessionFactory = sessionFactory;\r\n	}\r\n\r\n	public void deleteCounter(Counter counter) {\r\n		this.getSessionFactory().getCurrentSession().delete(&quot;Counter&quot;, counter);\r\n	}\r\n\r\n	public Counter findCounterByUsername(String username) {\r\n		List&lt;?&gt; list = this.getSessionFactory().getCurrentSession()\r\n			.createQuery(LOAD_BY_USERNAME).setString(0, username).list();\r\n		if(list==null||list.isEmpty()){\r\n			return null;\r\n		}else{\r\n			return (Counter)list.get(0);\r\n		}\r\n	}\r\n\r\n	public Counter saveCounter(Counter counter) {\r\n		this.getSessionFactory().getCurrentSession().save(counter);\r\n		return counter;\r\n	}\r\n\r\n	public Counter updateCounter(Counter counter) {\r\n		this.getSessionFactory().getCurrentSession().update(counter);\r\n		return counter;\r\n	}\r\n\r\n}\r\n</pre>\r\n<p style=\"margin-left: 40px\"><strong>2.8相应在applictionContext.xml中加入下面的Bean配置Dao层：</strong></p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n	&lt;!-- Dao层配置 --&gt;\r\n	&lt;bean id=&quot;counterDao&quot;\r\n		class=&quot;com.eyougo.counter.dao.CounterDaoHibernateImpl&quot; &gt;\r\n		&lt;property name=&quot;sessionFactory&quot; ref=&quot;sessionFactory&quot;&gt;&lt;/property&gt;\r\n	&lt;/bean&gt;</pre>\r\n<p style=\"margin-left: 40px\"><strong>3.开发业务层，进行发布WebService的前期工作。<br />\r\n</strong>未完待续，请听下回分解&hellip;&hellip;<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/38.gif\" /></p>','2010-02-02 23:04:32',1184,1,'\0',7,'<p>本篇目录：<strong><br />\r\n第二章：服务端开发<br />\r\n</strong>其实服务端就是一个Web Project，只不过这个Web项目简单到只包括一个计数器功能和提供相应的WebService&hellip;&hellip;<br />\r\n<strong>1.环境建立<br />\r\n2.使用Spring+Hibernate实现持久层<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </strong>2.1在MySQL中建立相应表<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.2建立与数据表对应的实体类Counter<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.3建立Hibernate的实体类ormaping文件Counter.hbm.xml<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.4在WEB-INF目录下建立applictionContext.xml作为spring配置文件。并在web.xml中加入spring的配置<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.5在src目录下建立config.property负责保存数据库连接配置信息<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.6相应在applictionContext.xml中配置好数据库连接<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.7建立持久层接口CounterDao，编写相应的持久层代码CounterDaoHibernateImpl<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.8相应在applictionContext.xml中加入下面的Bean配置Dao层</p>',0,'\0','',0),(14,'CXF+Spring+Hibernate+Struts2开发及应用WebService计数器详解（三）','<p><strong>3.开发业务层，进行发布WebService的前期工作。<br />\r\n</strong></p>\r\n<div style=\"margin-left: 40px\"><strong>3.1建立业务层接口CounterBiz，因为要将该业务层接口对外发布成为WebService，所以在CounterBiz代码中加入JAX-WS需要的Annotation注解：</strong><br />\r\n我们暂时只有2个业务，一个是计数，一个是查看信息。</div>\r\n<pre class=\"brush: java;\" title=\"code\">\r\npackage com.eyougo.counter.biz;\r\n\r\nimport javax.jws.WebParam;\r\nimport javax.jws.WebService;\r\n\r\n/**\r\n * 计数器业务接口，同时也发布为WebService接口\r\n * @author Meihongyuan(BLOG:http://blog.eyougo.com;QQ:84952576)\r\n *\r\n */\r\n//@WebService用于标明要发布为Web Service的接口，JAX-WS必需的标注\r\n@WebService\r\npublic interface CounterBiz {\r\n	/**\r\n	 * 将计数器加1\r\n	 * @param username\r\n	 * @param password\r\n	 * @return boolean 操作是否成功\r\n	 */\r\n	boolean counter(@WebParam(name=&quot;username&quot;)String username,@WebParam(name=&quot;password&quot;)String password);\r\n	/**\r\n	 * 获取计数器的信息\r\n	 * @param username\r\n	 * @param password\r\n	 * @return String 格式为&quot;日计数:周计数:月计数:总计数:最后登记时间或者出错信息&quot;\r\n	 */\r\n	//@WebParam用于标明参数的名称，在自动生成的wsdl文件中，参数不是arg0等，而是标注的name属性值\r\n	String getCounterInfo(@WebParam(name=&quot;username&quot;)String username, @WebParam(name=&quot;password&quot;)String password);\r\n}</pre>\r\n<div style=\"margin-left: 40px\"><strong>3.2编写业务层实现代码CounterBizImpl。将操作计数器的业务写在这里，业务也比较简单，看代码注释应该就可以明白了：</strong></div>\r\n<pre class=\"brush: java;\" title=\"code\">\r\npackage com.eyougo.counter.biz;\r\n\r\nimport java.text.DateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\nimport org.apache.commons.logging.Log;\r\nimport org.apache.commons.logging.LogFactory;\r\n\r\nimport com.eyougo.counter.dao.CounterDao;\r\nimport com.eyougo.counter.entity.Counter;\r\n\r\n\r\n/**\r\n * 业务实现类\r\n * \r\n * @author Meihongyuan\r\n * \r\n */\r\npublic class CounterBizImpl implements CounterBiz {\r\n	private final static Log log = LogFactory.getLog(CounterBizImpl.class);\r\n	private final static DateFormat DATEFORMATER = DateFormat   \r\n    	.getDateTimeInstance();  \r\n	private final static String ERRORINFO = &quot;-1:-1:-1:-1:&quot;;\r\n	\r\n	private CounterDao counterDao;\r\n\r\n	public CounterDao getCounterDao() {\r\n		return counterDao;\r\n	}\r\n\r\n	public void setCounterDao(CounterDao counterDao) {\r\n		this.counterDao = counterDao;\r\n	}\r\n\r\n	public synchronized boolean counter(String username,String password) {\r\n		try {\r\n			// 根据username获取Counter\r\n			log.info(username);\r\n			\r\n			Counter counter = this.counterDao.findCounterByUsername(username);\r\n			// 判断计数器是否存在\r\n			if (counter == null) {\r\n				log.info(&quot;计数器不存在！&quot;);\r\n				return false;\r\n			}\r\n			// 判断密码是否相同\r\n			if (!counter.getPassword().equals(password)) {\r\n				log.info(&quot;密码错误！不能计数！&quot;);\r\n				return false;\r\n			}\r\n			// 调用内部计数器加1操作方法获取新的Counter\r\n			counter = this.countertick(counter);\r\n			// 更新计数器\r\n			counter = this.counterDao.updateCounter(counter);\r\n		} catch (RuntimeException e) {\r\n			log.error(&quot;发生异常！counter操作失败！&quot;);\r\n			e.printStackTrace();\r\n			return false;\r\n		}\r\n		log.info(&quot;counter操作成功！&quot;);\r\n		return true;\r\n	}\r\n\r\n	public String getCounterInfo(String username, String password) {\r\n		// 根据username获取Counter\r\n		try {\r\n			Counter counter = this.counterDao.findCounterByUsername(username);\r\n			// 判断计数器是否存在\r\n			if (counter == null) {\r\n				log.info(&quot;计数器不存在！&quot;);\r\n				return ERRORINFO+&quot;计数器不存在&quot;;\r\n			}\r\n			// 判断密码是否相同\r\n			if (!counter.getPassword().equals(password)) {\r\n				log.info(&quot;密码错误！不能获取信息！&quot;);\r\n				return ERRORINFO+&quot;密码错误&quot;;\r\n			}\r\n			String dc = counter.getDayCount().toString();\r\n			String wc = counter.getWeekCount().toString();\r\n			String mc = counter.getMonthCount().toString();\r\n			String tc = counter.getTotalCount().toString();\r\n			Date date = counter.getRegisterDate();\r\n			String dateString = &quot;&quot;;\r\n			if(date != null){\r\n				dateString = DATEFORMATER.format(date);\r\n			}\r\n			return dc + &quot;:&quot; + wc + &quot;:&quot; + mc + &quot;:&quot; + tc + &quot;:&quot; + dateString;\r\n		} catch (RuntimeException e) {\r\n			log.error(&quot;发生异常&quot;);\r\n			e.printStackTrace();\r\n			return ERRORINFO+&quot;发生异常&quot;;\r\n		}\r\n	}\r\n\r\n	private Counter countertick(Counter counter) {\r\n		// 总计数+1\r\n		counter.setTotalCount(counter.getTotalCount() + 1);\r\n\r\n		// 根据时间处理其他计数操作\r\n		Date currdt = new java.util.Date();\r\n		Date lastdt = counter.getRegisterDate();\r\n		if (lastdt == null) {\r\n			lastdt = new java.util.Date();\r\n		}\r\n		Calendar currcr = Calendar.getInstance();\r\n		Calendar lastcr = Calendar.getInstance();\r\n		lastcr.setTime(lastdt);\r\n		currcr.setTime(currdt);\r\n\r\n		if (lastcr.get(Calendar.YEAR) == currcr.get(Calendar.YEAR)) {\r\n			// 月相同，月计数加1\r\n			if (lastcr.get(Calendar.MONTH) == currcr.get(Calendar.MONTH)) {\r\n				counter.setMonthCount(counter.getMonthCount() + 1);\r\n			} else {\r\n				counter.setMonthCount(1);\r\n			}\r\n			// 日相同，日计数加1\r\n			if (lastcr.get(Calendar.DAY_OF_YEAR) == currcr\r\n					.get(Calendar.DAY_OF_YEAR))\r\n				counter.setDayCount(counter.getDayCount() + 1);\r\n			else\r\n				counter.setDayCount(1);\r\n			// 周相同，周计数加1\r\n			if (lastcr.get(Calendar.WEEK_OF_YEAR) == currcr\r\n					.get(Calendar.WEEK_OF_YEAR))\r\n				counter.setWeekCount(counter.getWeekCount() + 1);\r\n			else\r\n				counter.setWeekCount(1);\r\n		} else { // 年不一样，则月计数、周计数、日计数肯定也不一样。\r\n			counter.setMonthCount(1);\r\n			counter.setDayCount(1);\r\n			counter.setWeekCount(1);\r\n		}\r\n		//更新登记时间\r\n		counter.setRegisterDate(currdt);\r\n		return counter;\r\n	}\r\n}\r\n</pre>\r\n<div style=\"margin-left: 40px\"><strong><br />\r\n3.3在applictionContext.xml中相应配置业务层及事务管理。在配置文件中加入以下Bean配置：</strong></div>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n	&lt;!-- 事务管理配置 --&gt;\r\n	&lt;bean id=&quot;transactionManager&quot;\r\n		class=&quot;org.springframework.orm.hibernate3.HibernateTransactionManager&quot;&gt;\r\n		&lt;property name=&quot;sessionFactory&quot;&gt;\r\n			&lt;ref local=&quot;sessionFactory&quot; /&gt;\r\n		&lt;/property&gt;\r\n	&lt;/bean&gt;\r\n	&lt;!-- Biz层配置 --&gt;\r\n	&lt;bean id=&quot;counterBizTarget&quot;\r\n		class=&quot;com.eyougo.counter.biz.CounterBizImpl&quot; &gt;\r\n		&lt;property name=&quot;counterDao&quot; ref=&quot;counterDao&quot;&gt;&lt;/property&gt;\r\n	&lt;/bean&gt;\r\n	&lt;bean id=&quot;counterBiz&quot;  class=&quot;org.springframework.transaction.interceptor.TransactionProxyFactoryBean&quot;&gt;\r\n		&lt;property name=&quot;target&quot;\r\n       		ref=&quot;counterBizTarget&quot; /&gt;\r\n       	&lt;property name=&quot;proxyInterfaces&quot;\r\n       		value=&quot;com.eyougo.counter.biz.CounterBiz&quot;/&gt;\r\n       	&lt;property name=&quot;transactionManager&quot;\r\n       		ref=&quot;transactionManager&quot; /&gt;\r\n       	&lt;property name=&quot;transactionAttributes&quot;&gt;\r\n       		&lt;props&gt;\r\n       			&lt;prop key=&quot;counter*&quot;&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n       			&lt;prop key=&quot;create*&quot;&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n       			&lt;prop key=&quot;remove*&quot;&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n       			&lt;prop key=&quot;*&quot;&gt;PROPAGATION_SUPPORTS,readOnly&lt;/prop&gt;\r\n       		&lt;/props&gt;\r\n       	&lt;/property&gt;\r\n	&lt;/bean&gt;</pre>\r\n<p><strong>4.将业务层接口发布为WebService。</strong></p>\r\n<p style=\"margin-left: 40px\"><strong>4.1在WEB-INF/web.xml中加入CXF的Servlet：</strong></p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n    &lt;servlet&gt;  \r\n        &lt;servlet-name&gt;CXFServlet&lt;/servlet-name&gt; \r\n        &lt;servlet-class&gt;  \r\n            org.apache.cxf.transport.servlet.CXFServlet   \r\n        &lt;/servlet-class&gt;  \r\n        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;  \r\n    &lt;/servlet&gt;  \r\n\r\n    &lt;servlet-mapping&gt;  \r\n        &lt;servlet-name&gt;CXFServlet&lt;/servlet-name&gt;  \r\n        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;  \r\n    &lt;/servlet-mapping&gt;</pre>\r\n<p style=\"margin-left: 40px\"><strong>4.2在applictionContext.xml中进行发布WebService的配置，也就是在Beans中做以下定义。这里使用了CXF中Jax-ws Endpoint的配置方式：</strong></p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n	&lt;!-- WebService配置 --&gt;\r\n	&lt;!-- implementor指定jaxws endpoint的实现者，使用#引用已经定义的Bean，也可以直接写类名 --&gt;\r\n	&lt;!-- address指定了服务发布的地址，这里采用了相对应用根目录的路径作为地址 --&gt;\r\n	&lt;jaxws:endpoint id=&quot;Counter&quot;  serviceName=&quot;s:CounterService&quot; endpointName=&quot;e:CounterEndpoint&quot; \r\n    	implementor=&quot;#counterBiz&quot; address=&quot;/Counter&quot;\r\n    	xmlns:s=&quot;http://blog.eyougo.com&quot; xmlns:e=&quot;http://blog.eyougo.com&quot;&gt;\r\n  	&lt;/jaxws:endpoint&gt;</pre>\r\n<p><strong>好了，到现在为止，服务端已经开发完毕了。<br />\r\n</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 像其他Web项目一样，将服务端也就是Counter这个Web项目部署到本机的Tomcat上，按我自己来说，该项目地址即为<a href=\"http://localhost:8080/Counter\">http://localhost:8080/Counter</a>。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 从以上的WebService配置可以看到，我们配置的服务发布的地址为&quot;/Counter&quot;，全地址也就是http://localhost:8080/Counter/Counter，所以我们在浏览器中输入<a href=\"http://localhost:8080/Counter/Counter?wsdl\">http://localhost:8080/Counter/Counter?wsdl</a>，即可看到所发布的计数器WebService的WSDL文件信息了。<br />\r\n&nbsp;</p>\r\n<p><strong>第三章：客户端开发<br />\r\n</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 敬请期待哦，睡了<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/76.gif\" />。<br />\r\n&nbsp;</p>\r\n<p>&nbsp;</p>','2010-02-02 23:14:50',2709,1,'\0',7,'本篇目录： <br />\r\n<strong>第二章：服务端开发<br />\r\n</strong>（接着前面的说&hellip;&hellip;）<br />\r\n<strong>3.开发业务层，进行发布WebService的前期工作。<br />\r\n</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3.1建立业务层接口CounterBiz<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3.2编写业务层实现代码CounterBizImpl<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3.3在applictionContext.xml中相应配置业务层及事务管理<br />\r\n<strong>4.将业务层接口发布为WebService。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </strong>4.1在WEB-INF/web.xml中加入CXF的Servlet<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4.2在applictionContext.xml中进行发布WebService的配置',0,'\0','',4),(15,'易游国博客的近期开发计划','日志中代码美化高亮功能，加入到博客使用的FCKEditor编辑器中，已经搞定了，不过这最新版的SyntaxHighlighter貌似在编辑器中完美使用并不那么简单，等写篇文章总结下；<br />\r\nRSS功能的开发，就可以随时关注本博客动态了；<br />\r\n实现后台编写日志时自动保存功能，省得写日志时间长老超时；<br />\r\n日志专题模块的开发，把一系列的日志归到一个专题里，便于查看；<br />\r\n启动ABOUT模块的开发，好有个地方介绍一下自己，嘿嘿；<br />\r\nDOWNLOAD模块的开发，暂时不着急；<br />\r\nPHOTO模块的开发，也不着急。<br />\r\n<br />\r\n嗯，要紧的是先把我的WebService计数器的文章写完&hellip;&hellip;<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/36.gif\" /><br />\r\n<br />','2010-03-09 17:13:39',528,1,'\0',8,'NND，我觉得要写个计划来督促自己了。<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/19.gif\" />。',0,'\0','',0),(16,'CXF+Spring+Hibernate+Struts2开发及应用WebService计数器详解（四）','<p>得把客户端开发写写了&hellip;&hellip;废话不说了&hellip;&hellip;Go&hellip;&hellip;<br />\r\n<br />\r\n<strong>第三章：客户端开发<br />\r\n</strong>这里的客户端其实就是本博客，客户端开发也就是在本博客上使用已经完成的计数器WebService，让它真正发挥作用。<br />\r\n开发客户端之前，要先在服务端的数据库中插入一条数据，来建立一个计数器。</p>\r\n<pre class=\"brush: sql;\" title=\"code\">\r\nINSERT INTO \'eyougo_counters\' ( \'USERNAME\',\'PASSWORD\') VALUES (\'eyougo\', \'1111\')</pre>\r\n<p>其实根据Hibernate对应下，这就是一个Counter对象的数据。为了方便，这个计数器的用户名和密码我就分别用eyougo和1111了。<br />\r\n<br />\r\n<strong>1.建立客户端对应的WebService接口CounterBiz<br />\r\n</strong>可以使用CXF的工具wsdl2java从服务端提供的wsdl生成相应的WebService客户端接口，详细的使用办法我会在续篇里接着说，这里就不这么麻烦了。<br />\r\n这里根据服务端的CounterBiz直接写客户端对应的CounterBiz代码了，或者将服务端CounterBiz打成jar包提供给客户端也可以。</p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\npackage com.eyougo.blog.biz;\r\n\r\nimport javax.jws.WebParam;\r\nimport javax.jws.WebService;\r\n\r\n/**\r\n * 计数器业务接口，来自WebService接口\r\n * @author Meihongyuan(BLOG:http://blog.eyougo.com;QQ:84952576)\r\n *\r\n */\r\n//JAX-WS必需的标注\r\n@WebService\r\npublic interface CounterBiz {\r\n	/**\r\n	 * 将计数器加1\r\n	 * @param username\r\n	 * @param password\r\n	 * @return boolean 操作是否成功\r\n	 */\r\n	//使用的WebService接口定义了@WebParam的name属性，这里也要定义，name值要相同\r\n	boolean counter(@WebParam(name=&quot;username&quot;)String username,@WebParam(name=&quot;password&quot;)String password);\r\n	/**\r\n	 * 获取计数器的信息\r\n	 * @param username\r\n	 * @param password\r\n	 * @return String 格式为&quot;日计数:周计数:月计数:总计数:最后登记时间或者出错信息&quot;\r\n	 */	\r\n	String getCounterInfo(@WebParam(name=&quot;username&quot;)String username, @WebParam(name=&quot;password&quot;)String password);\r\n}</pre>\r\n<p><strong>2.在客户端applicationContext.xml中使用CXF配置对应CounterBiz的业务Bean<br />\r\n</strong>首先要在applicationContext.xml中加入CXF的定义：</p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\r\n  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\r\n  xmlns:jaxws=&quot;http://cxf.apache.org/jaxws&quot;\r\n  xsi:schemaLocation=&quot;\r\n	http://www.springframework.org/schema/beans \r\n	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\r\n	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd&quot;&gt;</pre>\r\n&nbsp;&nbsp; 然后在applicationContext.xml中加入CounterBiz的定义：\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n	&lt;!-- 来自WebService的CounterBiz，因为该CounterBiz要注入到Struts2使用的其他Bean中，所以采用以下配置方式 --&gt;\r\n	&lt;!-- 配置WebService业务Bean的产生工厂 --&gt;\r\n	&lt;bean id=&quot;proxyFactory&quot; class=&quot;org.apache.cxf.jaxws.JaxWsProxyFactoryBean&quot;&gt;\r\n	&lt;!-- serviceClass指定业务接口 --&gt;\r\n    	&lt;property name=&quot;serviceClass&quot; value=&quot;com.eyougo.blog.biz.CounterBiz&quot;/&gt;\r\n	&lt;!-- address指定业务实现的WebService地址 --&gt;\r\n    	&lt;property name=&quot;address&quot; value=&quot;http://localhost:8080/Counter/Counter&quot;/&gt;\r\n  	&lt;/bean&gt;\r\n	&lt;!-- 配置由工厂产生的WebService业务Bean --&gt;\r\n  	&lt;bean id=&quot;counterBiz&quot; class=&quot;com.eyougo.blog.biz.CounterBiz&quot;\r\n   		factory-bean=&quot;proxyFactory&quot; factory-method=&quot;create&quot;/&gt;</pre>\r\n<p>到这里，来自WebService的CounterBiz业务Bean已经可以在其他Bean中装配使用了，也就是WebService的客户端开发其实已经结束了&hellip;&hellip;<br />\r\n<br />\r\n所以接下来我只是按照本博客的实际应用场景来说说CounterBiz的使用，其实这与在Struts2+Spring集成开发中使用本地的业务Bean没什么区别。<br />\r\n至于涉及到的Spring+Struts2框架使用和集成开发的知识，本文范围内也没法说清楚，这里就不进行讲解了。<br />\r\n<br />\r\n<strong>3.在客户端建立Struts2下CounterInterceptor，用于统计访问量<br />\r\n</strong>由于访问本博客任何地方均要经过Struts2的Interceptor过滤和对应的Action，所以建立Struts2下的CounterInterceptor来统计访问量。</p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\npackage com.eyougo.blog.web.interceptor;\r\n\r\nimport java.util.Map;\r\n\r\nimport com.eyougo.blog.biz.CounterBiz;\r\nimport com.eyougo.blog.comm.EyougoConstant;\r\nimport com.opensymphony.xwork2.ActionContext;\r\nimport com.opensymphony.xwork2.ActionInvocation;\r\nimport com.opensymphony.xwork2.interceptor.AbstractInterceptor;\r\n\r\npublic class CounterInterceptor extends AbstractInterceptor {\r\n	private CounterBiz counterBiz;\r\n	\r\n	public CounterBiz getCounterBiz() {\r\n		return counterBiz;\r\n	}\r\n\r\n	public void setCounterBiz(CounterBiz counterBiz) {\r\n		this.counterBiz = counterBiz;\r\n	}\r\n\r\n	@Override\r\n	public String intercept(ActionInvocation invocation) throws Exception {\r\n		ActionContext ctx = ActionContext.getContext();\r\n		Map session = ctx.getSession();\r\n		//先执行Action\r\n		invocation.invoke();\r\n		//从session中获取counter属性		\r\n		Object counter= session.get(EyougoConstant.COUNTER_KEY);\r\n		//如果session中没有counter属性\r\n		if (counter == null) {\r\n			counterBiz.counter(&quot;eyougo&quot;,&quot;1111&quot;);\r\n			//为了方便，上面这里将使用的计数器用户名和密码硬编码了，其实可以采用spring的配置将这两个字符串值注入进来。\r\n			session.put(EyougoConstant.COUNTER_KEY, &quot;counter&quot;);\r\n		} \r\n		return null;\r\n	}\r\n\r\n}</pre>\r\n<p><strong>4.在客户端applicationContext.xml中配置CounterInterceptor对象，并将CounterBiz业务Bean注入</strong></p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n	&lt;bean id=&quot;counterInterceptor&quot; class=&quot;com.eyougo.blog.web.interceptor.CounterInterceptor&quot;\r\n		autowire=&quot;byName&quot;&gt;\r\n	&lt;/bean&gt;</pre>\r\n<p>因为CounterInterceptor中已经写了CounterBiz，所以这里我使用了自动装配，这就是通过spring应用CounterBiz业务Bean的方法，可以看到和平常比没啥特别的吧。<br />\r\n<br />\r\n<strong>5.在struts.xml中配置CounterInterceptor，并将其加入到默认使用的interceptor-stack中。<br />\r\n</strong>和配置其他拦截器一样的：</p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n		&lt;interceptors&gt;\r\n			&lt;!-- 将通过spring定义的counterInterceptor作为拦截器--&gt;\r\n			&lt;interceptor name=&quot;counter&quot; class=&quot;counterInterceptor&quot;&gt;&lt;/interceptor&gt;\r\n			&lt;!-- eyougoDefaultStack是本博客默认使用的拦截器栈--&gt;\r\n			&lt;interceptor-stack name=&quot;eyougoDefaultStack&quot;&gt;\r\n			         &lt;interceptor-ref name=&quot;counter&quot;&gt;&lt;/interceptor-ref&gt;\r\n			         &lt;!-- 这里还有其他的interceptor引用，不写了--&gt;\r\n			&lt;/interceptor-stack&gt;\r\n		&lt;/interceptors&gt;\r\n</pre>\r\n<p>这样，访问本博客任何地方都会经过CounterInterceptor的计数控制，需要计数时就会调用CounterBiz中相应的方法，最后通过WebService传给服务端进行计数操作。<br />\r\n<br />\r\n那么查看计数统计信息呢，其实就是将CounterBiz注入到查看统计信息的Action中，由Action来调用CounterBiz中相应的方法就可以了。下节接着说，睡了<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/38.gif\" />。</p>','2010-02-09 17:14:00',1950,1,'\0',7,'本篇目录：<br />\r\n<strong>第三章：客户端开发<br />\r\n</strong>1.建立客户端对应的WebService接口CounterBiz<br />\r\n2.在客户端applicationContext.xml中使用CXF配置对应CounterBiz的业务Bean<br />\r\n3.在客户端建立Struts2下CounterInterceptor，用于统计访问量<br />\r\n4.在客户端applicationContext.xml中配置CounterInterceptor对象，并将CounterBiz业务Bean注入<br />\r\n5.在struts.xml中配置CounterInterceptor，并将其加入到默认使用的interceptor-stack中',0,'\0','',6),(17,'不该写','我清醒地知道，那是个梦，但我也更清醒地知道，那不仅仅是个梦。 <br />\r\n再一次从这样的梦里醒来，就像是再一次从三万英尺坠回地面，但不是身体在失重，而是思绪。 <br />\r\n尽管躯壳已经被冻成了冰，但我依稀的看见了自己那颗燃烧着的心。 <br />\r\n电视剧里说，一个出口也同时是一个入口，那一个入口呢，也同时是一个出口么？ <br />\r\n昨天我突然发现，自己喜欢吃的雪糕已经从冰系制品变成了奶系制品。也许这就是答案，但这同时还是问题。 <br />\r\n很多话想说出来，但这个时间，无人可以倾诉，就算有，谁愿意听呢？ <br />\r\n所以，我还是回去接着睡吧&hellip;&hellip; <br />\r\n蚊子在耳边：别废话，叫你蛋定你就蛋定&hellip;&hellip;','2011-08-03 16:30:14',920,1,'\0',8,'这本来是很久很久以前写在自己QQ空间里的一段牢骚，之所以搬过来，是因为我自己看了N多遍还是觉得这牢骚发的简直太牢骚了&hellip;&hellip;希望这辈子再没机会能这么痛快的发一回牢骚，恐怕也再没有这个感觉了&hellip;&hellip;那话怎么说来着？情到深处文自工。<br />\r\n唉，一声叹息，聊以自勉吧。',0,'\0','\0',0),(18,'要理解递归，你先要理解递归','1&ldquo;咚咚咚&rdquo;&ldquo;谁？&rdquo;过了很久&hellip;&hellip;&ldquo;Java&rdquo;<br />\r\n<br />\r\n2换一个电灯泡需要几个程序员？一个也不要，这是硬件问题。<br />\r\n<br />\r\n3一个计算机系学生坐在树下学习，又有一个计算机系学生骑着一辆很炫的自行车经过。前一个学生问道：&ldquo;你的车从哪儿弄来的？&rdquo;骑车的回答说：&ldquo;我在外面学习的时候，一个漂亮的MM骑着车过来，她脱光了所有的衣服对我说，&lsquo;你想要什么我都给你&rsquo;。&rdquo;&ldquo;明智的选择！你穿她的衣服肯定不合适的。&rdquo;前一个学生说道。<br />\r\n<br />\r\n4&nbsp;怎么使用面向对象的方式变得富有？继承。&nbsp;<br />\r\n<br />\r\n5&nbsp;要理解递归，你先要理解递归。<br />\r\n<br />\r\n6一男子在路边一根接着一根地抽烟。一个女士走过来对他说：&ldquo;嘿，你不知道你是在慢性自杀吗？注意看看烟盒上的警告信息。&rdquo;&ldquo;没关系&rdquo;，男子悠然自得地又吸了一口：&ldquo;我是个程序员。&rdquo;&ldquo;嗯？这和你是程序员有什么关系？&rdquo;&ldquo;我们一点儿也不在乎警告（warning），我们只在乎错误（error）。&rdquo;<br />\r\n<br />\r\n7（唔&hellip;&hellip;这个貌似跟程序员没关系&hellip;&hellip;）地理学家和数学家在飞机上坐在了一起。地理学家伸过头来问数学家想不想玩个有趣的游戏。数学家只想睡一觉，所以就礼貌地拒绝了。可地理学家坚持说这个游戏&nbsp;很有趣，他解释说：&ldquo;我问你一个问题，如果你回答不上来，你就给我5美元。然后你再问我一个问题，如果我回答不上来，就给你5美元。&rdquo;数学家又一次礼貌地&nbsp;拒绝了。这下地理学家有点儿激动，说道：&ldquo;这样吧，如果你不知道答案就给我5美元，如果我不知道答案的话就给你50美元！&rdquo;这下子数学家有了兴趣，并且他也明白如果他一直不同意的话也没法入睡，所以就加入了游戏。地理学家先问了第一个问题。&ldquo;地球到月球的距离是多少？&rdquo;数学家一句话不说，掏出钱包来给了地理学家5美元。该数学家问问题了。他问地理学家：&ldquo;什么东西上山的时候三只脚，下山的时候四只脚？&rdquo;地理学家疑惑地看了一下数学家。他取出笔记本电脑，查找了他所有的资料。他通过飞机上的调制解调器上网查找美国国会图书馆，还发送E-mail问了他的同事&mdash;&mdash;但是始终没找到答案。过了一个小时，他叫醒了数学家并奉上50美元现金。数学家礼貌地收下了钱，转过头去接着睡觉。地理学家越来越感到迷惑不已，他叫醒了数学家，问道：&ldquo;好吧，答案到底是什么？&rdquo;数学家又是二话不说，掏出钱包，给了地理学家5美元。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n8&nbsp;&nbsp;一百万只猴子，给他们一百万个键盘，其中的一个会写出Java程序，其它的写的都是Perl程序。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n9&nbsp;&nbsp;十个顶尖软件工程师参加培训管理人员的课程。老师提出了这样一个问题：&ldquo;假如你供职的公司是为航空电子设备提供软件的。有一天你乘飞机出差，当你上了飞机后你发现一个牌子上写着这个飞机用的是你的团队开发的Beta版软件，你会下飞机吗？&rdquo;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n九个软件工程师举了手。老师看着第十个问道：&ldquo;你为什么愿意留在飞机上？&rdquo;这人回答说：&ldquo;如果是我的团队写的这个软件，飞机根本无法起飞，根本谈不上坠毁。&rdquo;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n10&nbsp;为什么程序员总是分不清万圣节和圣诞节？因为&nbsp;Oct&nbsp;31&nbsp;==&nbsp;Dec&nbsp;25。<br />\r\n<br />\r\n11&nbsp;换一个电灯泡需要几个微软程序员？一个也不要，他们会把黑暗变成标准然后告诉每个人：&ldquo;我们就是这么设计的。&rdquo;&nbsp;&nbsp;<br />\r\n<br />\r\n12&nbsp;Keyboard&nbsp;not&nbsp;found&nbsp;...&nbsp;press&nbsp;F1&nbsp;to&nbsp;continue&nbsp;<br />\r\n<br />\r\n13&nbsp;Unix是用户友好的，只是要成为Unix的用户很困难。<br />\r\n<br />\r\n14&nbsp;这个笑话大概来自70年代的米国：一个新手在试着修复一台坏了的LISP机器，他的方法就是反复关上电源然后打开。专家看到之后，严厉地批评说：&ldquo;你这样是没用的，你必须要明白出错的深层次原因。&rdquo;&nbsp;&nbsp;<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;专家关掉电源，然后打开。运行正常了。&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n15&nbsp;计算机科学家靠什么避孕？他们的人格魅力。<br />\r\n<br />\r\n16&nbsp;一个微软工程师正走在路上，突然听到一只青蛙说：&ldquo;如果你吻我一下的话，我就会变成漂亮的女人，我们可以结婚，从此幸福地生活在一起。&rdquo;工程师看着青蛙想了一下，抓起它轻轻地放在自己的上衣口袋里。青蛙把头伸出来说：&ldquo;怎么，你不准备吻我吗？&rdquo;&ldquo;是的&rdquo;，工程师说：&ldquo;我在微软工作，没有时间娶妻&mdash;&mdash;不过有一只会说话的青蛙还是挺酷的。&rdquo;&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n17&nbsp;换一个电灯泡需要几个C++程序员？你还在用面向过程的思维考虑问题。一个设计良好的电灯泡类必然封装了换灯泡的方法，所以你要做的就是调用&ldquo;换电灯泡&rdquo;方法。<br />\r\n<br />\r\n18&nbsp;两个程序员在聊天：&ldquo;我昨天碰到个辣妹。我把她带回家，马上就开始如饥似渴地亲吻，她就坐在我的键盘上，然后&hellip;&hellip;&rdquo;&ldquo;你在家里也有台电脑？CPU是什么型号的？&rdquo;<br />\r\n<br />\r\n19&nbsp;为什么程序员喜爱UNIX:unzip,&nbsp;strip,&nbsp;touch,&nbsp;finger,&nbsp;grep,&nbsp;mount,&nbsp;fsck,&nbsp;more,&nbsp;yes,&nbsp;fsck,&nbsp;fsck,&nbsp;fsck,&nbsp;umount,&nbsp;sleep<br />\r\n<br />\r\n20&nbsp;电脑是高速的笨蛋，程序员是低速的笨蛋。<br />\r\n<br />\r\n21&nbsp;一个存放了一半数据的数组：悲观的程序员觉得数组是半空的。乐观的程序员觉得数组是半满的。真正的程序员?觉得数组占用的空间过大，需要调用realloc()。&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n22编译成功了！交付吧','2010-03-01 14:00:37',394,1,'\0',8,'程序员那些事（转帖版）&hellip;&hellip;',0,'\0','\0',0),(19,'CXF+Spring+Hibernate+Struts2开发及应用WebService计数器详解（五）','<p><strong>第三章：客户端开发</strong></p>\r\n<p>抱歉，很长时间没有写了。</p>\r\n<p>上一节将CXF与Spring结合下WebService客户端开发讲了下。<br />\r\n总结一句，就是用CXF配置一个Spring下的业务Bean而已，这个Bean的用法和普通Spring的Bean没任何区别，区别只是它的实现来自于WebService。<br />\r\n这一节呢，就是这个Bean在Spring+Struts2中的另外一个应用，那就是查看我们的统计信息。<br />\r\n<br />\r\n<strong>6.建立及配置本博客专用的计数器工具EyougoCounter</strong><br />\r\n<br />\r\n因为这个CounterBiz的Bean来自于WebService接口，所以并没有用户名和密码信息，上一节我们在CounterInterceptor中使用它时，直接将需要传递的用户名和密码参数硬编码了。这样每次要调用CounterBiz接口时都需要写用户名和密码，很麻烦。<br />\r\n既然这个用户名和密码对于本博客来说是固定的，因此，我决定在客户端（也就是本博客）中封装一个专门负责本博客计数的业务Bean（算是个代理么），将本博客使用的计数器用户名和密码传递给它，由它调用WebService的CounterBiz接口，这样以后在其他Bean中需要调用CounterBiz接口时直接调用这个Bean就可以了。<br />\r\n<br />\r\n闲话少说，开工。<br />\r\n<br />\r\n首先建立一个本博客使用的计数器，它包含了用户名和密码信息，并委托给CounterBiz接口来进行操作。</p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\npackage com.eyougo.blog.comm;\r\n\r\nimport com.eyougo.blog.biz.CounterBiz;\r\n/**\r\n * 本博客的计数器，委托业务层操作\r\n * @author Mei\r\n *\r\n */\r\npublic class EyougoCounter {\r\n	private String username;\r\n	private String password;\r\n	private CounterBiz counterBiz;\r\n	\r\n	public String getUsername() {\r\n		return username;\r\n	}\r\n\r\n	public void setUsername(String username) {\r\n		this.username = username;\r\n	}\r\n\r\n	public String getPassword() {\r\n		return password;\r\n	}\r\n\r\n	public void setPassword(String password) {\r\n		this.password = password;\r\n	}\r\n\r\n	public CounterBiz getCounterBiz() {\r\n		return counterBiz;\r\n	}\r\n\r\n	public void setCounterBiz(CounterBiz counterBiz) {\r\n		this.counterBiz = counterBiz;\r\n	}\r\n\r\n	public boolean counter(){\r\n		return counterBiz.counter(username, password);\r\n	}\r\n	/**\r\n	 * \r\n	 * @return String 格式为&quot;日计数:周计数:月计数:总计数:最后登记时间或者出错信息&quot;\r\n	 */\r\n	public String getCounterInfo(){\r\n		return counterBiz.getCounterInfo(username, password);\r\n	}\r\n}\r\n</pre>\r\n<p>然后在Spring的配置文件中进行配置，并且通过配置将使用的用户名和密码注入。</p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n	&lt;!-- 配置本博客使用的计数器 --&gt;\r\n	&lt;bean id=&quot;counter&quot; class=&quot;com.eyougo.blog.comm.EyougoCounter&quot;&gt;\r\n   		&lt;property name=&quot;counterBiz&quot; ref=&quot;counterBiz&quot;&gt;&lt;/property&gt;\r\n   		&lt;property name=&quot;username&quot;&gt;\r\n   			&lt;value&gt;eyougo&lt;/value&gt;\r\n   		&lt;/property&gt;\r\n   		&lt;property name=&quot;password&quot;&gt;\r\n   			&lt;value&gt;1111&lt;/value&gt;\r\n   		&lt;/property&gt;\r\n	&lt;/bean&gt;</pre>\r\n<p>这样以后再调用CounterBiz接口时，直接调用counter这个Bean就可以了，就不需要传递用户名和密码了。</p>\r\n<p>下面我们在Struts2的Action中调用它，这跟一般的Struts2开发没什么区别。<br />\r\n<br />\r\n<strong>7.建立用于查看访问统计信息的CounterInfoAction</strong></p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\npackage com.eyougo.blog.web.action;\r\n\r\nimport java.util.Map;\r\n\r\nimport org.apache.commons.lang.StringUtils;\r\nimport com.eyougo.blog.comm.EyougoCounter;\r\n\r\n/**\r\n * 获取访问量统计信息，仅限于本博客使用\r\n * @author Mei\r\n *\r\n */\r\npublic class CounterInfoAction extends BaseAction {\r\n	\r\n	private EyougoCounter counter;\r\n	private String dayCount;\r\n	private String weekCount;\r\n	private String monthCount;\r\n	private String allCount;\r\n	\r\n	public EyougoCounter getCounter() {\r\n		return counter;\r\n	}\r\n\r\n	public void setCounter(EyougoCounter counter) {\r\n		this.counter = counter;\r\n	}\r\n\r\n	public String getDayCount() {\r\n		return dayCount;\r\n	}\r\n\r\n	public void setDayCount(String dayCount) {\r\n		this.dayCount = dayCount;\r\n	}\r\n\r\n	public String getWeekCount() {\r\n		return weekCount;\r\n	}\r\n\r\n	public void setWeekCount(String weekCount) {\r\n		this.weekCount = weekCount;\r\n	}\r\n\r\n	public String getMonthCount() {\r\n		return monthCount;\r\n	}\r\n\r\n	public void setMonthCount(String monthCount) {\r\n		this.monthCount = monthCount;\r\n	}\r\n\r\n	public String getAllCount() {\r\n		return allCount;\r\n	}\r\n\r\n	public void setAllCount(String allCount) {\r\n		this.allCount = allCount;\r\n	}\r\n	\r\n	public String info(){\r\n		String counterInfo = counter.getCounterInfo();\r\n		String[] visitCount = StringUtils.split(counterInfo, &quot;:&quot;);\r\n		this.setDayCount(visitCount[0]);\r\n		this.setWeekCount(visitCount[1]);\r\n		this.setMonthCount(visitCount[2]);\r\n		this.setAllCount(visitCount[3]);\r\n		return &quot;info&quot;;\r\n	}\r\n}\r\n</pre>\r\n<p><strong>8.在Spring的applicationContext.xml配置文件中配置CounterInfoAction的Bean</strong></p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n	&lt;bean id=&quot;CounterInfoAction&quot; class=&quot;com.eyougo.blog.web.action.CounterInfoAction&quot;\r\n		scope=&quot;prototype&quot; autowire=&quot;byName&quot;&gt;\r\n	&lt;/bean&gt;</pre>\r\n<p>仍然使用了Spring的自动装配&hellip;&hellip;<br />\r\n<br />\r\n<strong>9.建立CounterInfoAction相应的Result页面counterInfo.jsp</strong><br />\r\n页面counterInfo.jsp其实就是用Struts2的&lt;s:property/&gt;标签将CounterInfoAction里面的各个信息显示出来，每一个熟悉Struts2开发的人都应该很清楚的基本知识，自己写吧&hellip;&hellip;因为涉及到本博客页面样式等等原因，我这里就不写了。<br />\r\n<br />\r\n<strong>10.在struts.xml中配置CounterInfoAction及Result</strong><br />\r\n&nbsp;</p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n&lt;!-- 用于计数业务的struts配置文件 --&gt;\r\n&lt;struts&gt;\r\n	&lt;package name=&quot;counter&quot; namespace=&quot;/&quot; extends=&quot;eyougo-default&quot;&gt;\r\n		&lt;action name=&quot;counter_*&quot; class=&quot;CounterInfoAction&quot; method=&quot;{1}&quot;&gt;\r\n			&lt;result name=&quot;info&quot;&gt;/WEB-INF/jsp/counterInfo.jsp&lt;/result&gt;\r\n		&lt;/action&gt;\r\n	&lt;/package&gt;\r\n&lt;/struts&gt;</pre>\r\n<p><br />\r\n这里的配置基于本博客，我的counterInfo.jsp放在了/WEB-INF/jsp目录下，只是个参考而已，对熟悉Struts2的人来说，这就是个小意思。<br />\r\n<br />\r\n好，我们访问一下这个Action。地址就是：应用根目录/counter_info.action&hellip;&hellip;看到结果了吧？</p>','2010-03-15 17:35:11',1041,1,'\0',7,'<p>本篇目录：<strong><br />\r\n第三章：客户端开发<br />\r\n</strong>接上节&hellip;&hellip;<br />\r\n6.建立及配置本博客专用的计数器工具EyougoCounter<br />\r\n7.建立用于查看访问统计信息的CounterInfoAction<br />\r\n8.在Spring的applicationContext.xml配置文件中配置CounterInfoAction的Bean<br />\r\n9.建立CounterInfoAction相应的Result页面counterInfo.jsp<br />\r\n10.在struts.xml中配置CounterInfoAction及Result</p>',0,'\0','',0),(20,'易游国单用户博客EyougoBlog更新至0.9.1alpha版','<p>易游国单用户博客EyougoBlog更新至0.9.1版！<br />\r\n因为还是开发阶段，所以依然是alpha版<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/28.gif\" />。<br />\r\n<br />\r\n更新日志：<br />\r\n1.加入博客站点配置模块及相应的初始化。<br />\r\n2.加入首页RecentComments最新评论显示。<br />\r\n3.加入日志页版权标记、发布时间等显示。<br />\r\n4.加入日志页代码高亮显示，编辑器中加入相应插件。<br />\r\n5.加入某些页面操作后的返回提示。<br />\r\n6.加入用户注册后自动登录。<br />\r\n7.整理后台界面和功能。<br />\r\n8.修正多个Bug。<br />\r\n9.优化和完善部分代码。<br />\r\n10.加入计数器模块，包括计数和查询功能。（*）<br />\r\n<br />\r\n其中*为计数器版本更新，仅供本博客站点使用。</p>','2011-06-29 14:43:20',541,1,'\0',7,'更新日志：<br />\r\n1.加入博客站点配置模块及相应的初始化。<br />\r\n2.加入首页RecentComments最新评论显示。<br />\r\n3.加入日志页版权标记、发布时间等显示。<br />\r\n4.加入日志页代码高亮显示，编辑器中加入相应插件。<br />\r\n5.加入某些页面操作后的返回提示。<br />\r\n6.加入用户注册后自动登录。<br />\r\n7.整理后台界面和功能。<br />\r\n8.修正多个Bug。<br />\r\n9.优化和完善部分代码。',0,'\0','',0),(21,'一代名妓G.cn走了（转）','一直想说些什么，却一直没找到感觉，不敢轻易说。<br />\r\n这是我从别人网站上看到的，转过来吧，挺有意思。<br />\r\n想说的恐怕也就是这些了&hellip;&hellip;<br />\r\n<br />\r\n<br />\r\n一个知名的妓女说她一直以来都是被强奸的，走了。<br />\r\n<br />\r\n一大批不知名的嫖客急了，说你走了我们怎么办？ <br />\r\n<br />\r\n一小撮儿皮条客疯了，说，日啊，我们以后上哪里去赚钱。<br />\r\n<br />\r\n另一群妓女闷头挣钱，对着那个名妓的背影啐上一口，小样儿的，以为自己有点名气就了不起了，很傻很天真。<br />\r\n<br />\r\n为了版权，申明下，转自<a href=\"http://www.phpx.com/\">http://www.phpx.com/</a>','2010-03-28 22:56:09',644,1,'\0',8,'一直想说些什么，却一直没找到感觉，不敢轻易说。<br />\r\n这是我从别人网站上看到的，转过来吧，挺有意思。<br />\r\n想说的恐怕也就是这些了&hellip;&hellip;',0,'\0','\0',0),(22,'Flex分页组件EyougoPager 1.0Beta版','<p>EyougoPager，目标是开发一个简单好用的Flex列表分页组件，上手容易，引用方便，配置丰富。可以与服务器端配合，支持大数据量分页读取。目前为1.0beta版。</p>\r\n<p><strong>分页属性：<br />\r\n</strong>recordCount&nbsp;&nbsp;&nbsp; //记录总数，默认为0，组件根据该属性生成分页<br />\r\ncurrentPage&nbsp;&nbsp;&nbsp; //当前页，默认为1<br />\r\npageSize&nbsp;&nbsp;&nbsp;&nbsp; //每页记录数，默认为10</p>\r\n<p><strong>可定制属性：<br />\r\n</strong>normalStyleName&nbsp;&nbsp;&nbsp; &nbsp; //普通按钮的样式名称<br />\r\ndisabledStyleName&nbsp;&nbsp; &nbsp; //不可用按钮的样式名称<br />\r\nfirstLabel&nbsp;&nbsp; &nbsp; //首页按钮显示的文字，默认为&quot;首 页&quot;<br />\r\nprevLabel&nbsp;&nbsp;&nbsp; //上一页按钮显示的文字，默认为&quot;上一页&quot;<br />\r\nnextLabel&nbsp; &nbsp; //下一页按钮显示的文字，默认为&quot;下一页&quot;<br />\r\nlastLabel&nbsp;&nbsp;&nbsp; //尾页按钮显示的文字，默认为&quot;尾 页&quot;<br />\r\nshowFirstAndLast&nbsp;&nbsp;&nbsp;&nbsp; //是否显示首页和尾页按钮，默认为true</p>\r\n<p><strong>翻页事件：<br />\r\n</strong>com.eyougo.pager.PagerEvent.PAGECHANGED</p>\r\n<p><strong>使用说明：<br />\r\n</strong><em>1.</em>加入分页组件，例如</p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n&lt;pager:Pager id=&quot;pager&quot; recordCount=&quot;{dataCount}&quot; pageSize=&quot;10&quot; showFirstAndLast=&quot;false&quot; xmlns:pager=&quot;com.eyougo.pager.*&quot;&gt;\r\n&lt;/pager:Pager &gt;</pre>\r\n<p>定义为每页10条，不显示首页尾页按钮，其中{dataCount}从服务器端读取。<br />\r\n<br />\r\n<em>2.</em>定义翻页事件处理<br />\r\n就是按下翻页按钮时程序要做出的动作，比如向服务器端请求下一页数据，例如</p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\nprivate function pageChangeHandler(e:PagerEvent){\r\n this.loadData(e.currentPage);//可根据事件中当前页等参数读取数据\r\n}</pre>\r\n<p><em>3.</em>加入翻页事件处理的监听<br />\r\n在程序初始化或开始运行的代码中加上</p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\nthis.pager.addEventListener(PagerEvent.PAGECHANGED, pageChangeHandler);</pre>\r\n<p>这样上面定义好的id为pager的分页组件在翻页时就会触发pageChangeHandler函数进行处理。</p>\r\n<p><strong>程序源码：<br />\r\n</strong>Pager.mxml源码</p>\r\n<pre class=\"brush: xhtml;\" title=\"code\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\r\n&lt;mx:HBox xmlns:mx=&quot;http://www.adobe.com/2006/mxml&quot; width=&quot;100%&quot; height=&quot;26&quot; paddingTop=&quot;5&quot;\r\n	 fontSize=&quot;12&quot; fontWeight=&quot;normal&quot;\r\n	 creationComplete=&quot;this.init()&quot;&gt;\r\n	&lt;mx:Metadata&gt;\r\n		[Event(name=&quot;pageChanged&quot;, type=&quot;com.eyougo.pager.PagerEvent&quot;)]\r\n	&lt;/mx:Metadata&gt;\r\n	&lt;mx:Style&gt;\r\n		.normalStyle{\r\n			font-size:12px;\r\n			font-style: normal;\r\n			font-weight: normal;\r\n		}\r\n		.disabledStyle{\r\n			font-size:12px;\r\n			font-style: normal;\r\n			font-weight: normal;\r\n		}\r\n    &lt;/mx:Style&gt;\r\n    &lt;mx:Script&gt;\r\n    	&lt;![CDATA[\r\n    		import mx.events.FlexEvent;\r\n    		import mx.controls.Label;\r\n			import com.eyougo.pager.PagerEvent;\r\n			import mx.controls.LinkButton;\r\n			import mx.collections.ArrayCollection;\r\n			/*分页参数定义*/\r\n			//combox使用的数组\r\n			[Bindable]\r\n            public var pageComboArrayCollection:ArrayCollection; \r\n			//当前页\r\n			private var _currentPage:int=1;\r\n			public function set currentPage(value:int):void{\r\n				this._currentPage=value;\r\n			}\r\n			[Bindable]\r\n			public function get currentPage():int{\r\n				return this._currentPage;\r\n			}\r\n			//每页数量\r\n			private var _pageSize:int=10;\r\n			public function set pageSize(value:int):void{\r\n				this._pageSize=value;\r\n			}\r\n			[Bindable]\r\n			public function get pageSize():int{\r\n				return this._pageSize;\r\n			}\r\n			//总数量\r\n			private var _recordCount:int=0;\r\n			public function set recordCount(value:int):void{\r\n				this._recordCount=value;\r\n				initPager();\r\n			}\r\n			//总页数\r\n			private var _totalPage:int;\r\n			public function set totalPage(value:int):void{\r\n			} \r\n			[Bindable]\r\n			public function get totalPage():int{\r\n				return this._totalPage;\r\n			}\r\n			\r\n			/*样式定义*/\r\n			//普通按钮样式名\r\n			private var _normalStyleName:String=&quot;normalStyle&quot;;\r\n			public function set normalStyleName(value:String):void{\r\n				this._normalStyleName=value;\r\n			}\r\n			//不可用按钮样式名 \r\n			private var _disabledStyleName:String=&quot;disabledStyle&quot;;\r\n			public function set disabledStyleName(value:String):void{\r\n				this._disabledStyleName=value;\r\n			}\r\n			/*按钮显示文字*/ \r\n			private var _firstLabel:String=&quot;首　页&quot;;\r\n			public function set firstLabel(value:String):void{\r\n				this._firstLabel=value;\r\n			}\r\n			\r\n			private var _prevLabel:String=&quot;上一页&quot;;\r\n			public function set prevLabel(value:String):void{\r\n				this._prevLabel=value;\r\n			}\r\n   \r\n			private var _nextLabel:String=&quot;下一页&quot;;\r\n			public function set nextLabel(value:String):void{\r\n				this._nextLabel=value;\r\n			}\r\n   \r\n			private var _lastLabel:String=&quot;尾　页&quot;;\r\n			public function set lastLabel(value:String):void{\r\n				this._lastLabel=value;\r\n			}\r\n			\r\n			//是否显示首页和尾页按钮\r\n			private var _showFirstAndLast:Boolean=true;\r\n			public function set showFirstAndLast(value:Boolean):void{\r\n				this._showFirstAndLast=value;\r\n			}\r\n			\r\n			/*处理函数*/\r\n			private function initPager():void{\r\n				this.removeAllChildren();\r\n				//获取总的页面数\r\n				if(this._recordCount!=0){\r\n					if(this._recordCount%this._pageSize==0){\r\n						this._totalPage=this._recordCount/this._pageSize;\r\n					}else{\r\n						this._totalPage=(this._recordCount-this._recordCount%this._pageSize)/this._pageSize+1;\r\n					}\r\n				}\r\n				//创建信息显示\r\n				var pageInfo:Label = new Label();\r\n				pageInfo.height = 18;\r\n				pageInfo.width = 90;\r\n				pageInfo.text = &quot;总数&quot; + this._recordCount + &quot;/共&quot; +this._totalPage+ &quot;页&quot;;\r\n				this.addChild(pageInfo);\r\n				\r\n				//创建首页按钮\r\n				if(this._showFirstAndLast){\r\n					var firstButton:LinkButton=new LinkButton();\r\n					firstButton.label=this._firstLabel;\r\n					firstButton.height = 18;\r\n					if(this._currentPage == 1){\r\n						firstButton.enabled = false;\r\n						firstButton.styleName=this._disabledStyleName;\r\n					}else{\r\n						firstButton.enabled = true;\r\n						firstButton.styleName=this._normalStyleName;\r\n						firstButton.addEventListener(MouseEvent.CLICK,firstButtonClick);\r\n					}\r\n					this.addChild(firstButton);\r\n				}\r\n				//创建上一页按钮\r\n				var prevButton:LinkButton=new LinkButton();\r\n				prevButton.label=this._prevLabel;\r\n				prevButton.height = 18;\r\n				if(this._currentPage == 1){\r\n					prevButton.enabled = false;\r\n					prevButton.styleName=this._disabledStyleName;\r\n				}else{\r\n					prevButton.enabled = true;\r\n					prevButton.styleName=this._normalStyleName;\r\n					prevButton.addEventListener(MouseEvent.CLICK,prevButtonClick);\r\n				}\r\n				\r\n				this.addChild(prevButton);\r\n				\r\n				//创建下一页按钮\r\n				var nextButton:LinkButton=new LinkButton();\r\n				nextButton.label=this._nextLabel;\r\n				nextButton.height = 18;\r\n				if(this._currentPage &gt;= this._totalPage){\r\n					nextButton.enabled = false;\r\n					nextButton.styleName=this._disabledStyleName;\r\n				}else{\r\n					nextButton.enabled = true;\r\n					nextButton.styleName=this._normalStyleName;\r\n					nextButton.addEventListener(MouseEvent.CLICK,nextButtonClick);\r\n				}\r\n				this.addChild(nextButton);\r\n				\r\n				//创建尾页按钮\r\n				if(this._showFirstAndLast){\r\n					var lastButton:LinkButton=new LinkButton();\r\n					lastButton.label=this._lastLabel;\r\n					lastButton.height = 18;\r\n					if(this._currentPage &gt;= this._totalPage){\r\n						lastButton.enabled = false;\r\n						lastButton.styleName=this._disabledStyleName;\r\n					}else{\r\n						lastButton.enabled = true;\r\n						lastButton.styleName=this._normalStyleName;\r\n						lastButton.addEventListener(MouseEvent.CLICK,lastButtonClick);\r\n					}\r\n					this.addChild(lastButton);\r\n				}\r\n				//创建ComboBox按钮\r\n				setPageCombo();\r\n				var pageCombo:ComboBox = new ComboBox();\r\n				pageCombo.dataProvider = pageComboArrayCollection;\r\n				pageCombo.selectedIndex = this._currentPage - 1;\r\n				pageCombo.styleName = this._normalStyleName;\r\n				pageCombo.height = 18;\r\n				pageCombo.width = 72;\r\n				pageCombo.addEventListener(Event.CLOSE, pageComboChange);\r\n				pageCombo.close(new Event(Event.CLOSE));\r\n				this.addChild(pageCombo);\r\n			}\r\n			\r\n			//初始化\r\n			private function init():void{\r\n				initPager();\r\n				this.addEventListener(PagerEvent.PAGECHANGED,pageIndexChanged);\r\n			}\r\n  \r\n			//事件处理\r\n			private function pageIndexChanged(e:PagerEvent):void{\r\n				this._currentPage=e.currentPage;\r\n				initPager();\r\n			}\r\n\r\n			private function firstButtonClick(e:MouseEvent):void{\r\n				var event:PagerEvent=new PagerEvent(&quot;pageChanged&quot;);\r\n				event.currentPage=1;\r\n				dispatchEvent(event);\r\n			}\r\n			\r\n			private function prevButtonClick(e:MouseEvent):void{\r\n				var event:PagerEvent=new PagerEvent(&quot;pageChanged&quot;);\r\n				if(this._currentPage&gt;1){\r\n					event.currentPage=this._currentPage-1;\r\n				}\r\n				else{\r\n					event.currentPage=1;\r\n				}\r\n				dispatchEvent(event);\r\n			}\r\n  \r\n			private function nextButtonClick(e:MouseEvent):void{\r\n				var event:PagerEvent=new PagerEvent(&quot;pageChanged&quot;);\r\n				if(this._currentPage&lt;this._totalPage){\r\n					event.currentPage=this._currentPage+1;\r\n				}else{\r\n					event.currentPage=this._totalPage;\r\n				}\r\n				dispatchEvent(event);\r\n			}\r\n  \r\n			private function lastButtonClick(e:MouseEvent):void{\r\n				var event:PagerEvent=new PagerEvent(&quot;pageChanged&quot;);\r\n				event.currentPage=this._totalPage;\r\n				dispatchEvent(event);\r\n			}\r\n			\r\n			private function pageComboChange(e:Event):void{\r\n				var pageIndex:Number = ComboBox(e.target).selectedItem.data ;\r\n				var event:PagerEvent=new PagerEvent(&quot;pageChanged&quot;);\r\n				event.currentPage = pageIndex;\r\n				dispatchEvent(event);\r\n			}\r\n			\r\n			private function setPageCombo():void{\r\n		        this.pageComboArrayCollection = new ArrayCollection();    	\r\n		    	for(var i:int=1;i&lt;=this._totalPage;i++)\r\n		    	{\r\n		    		var obj:Object = new Object();\r\n		    		obj.label=\'第\'+i+\'页\' ;\r\n		    		obj.data =i;\r\n		    		pageComboArrayCollection.addItem(obj);\r\n		    	}\r\n		    }\r\n    	]]&gt;\r\n    &lt;/mx:Script&gt;\r\n    &lt;mx:Label width=&quot;90&quot; text=&quot;总数0/共1页&quot; textAlign=&quot;center&quot; height=&quot;18&quot;/&gt;\r\n	&lt;mx:LinkButton label=&quot;首  页&quot; id=&quot;firstButton&quot; height=&quot;18&quot; styleName=&quot;normalStyle&quot;/&gt;\r\n	&lt;mx:LinkButton label=&quot;上一页&quot; id=&quot;prevButton&quot; height=&quot;18&quot; styleName=&quot;normalStyle&quot;/&gt;\r\n	&lt;mx:LinkButton label=&quot;下一页&quot; id=&quot;nextButton&quot; height=&quot;18&quot; styleName=&quot;normalStyle&quot;/&gt;\r\n	&lt;mx:LinkButton label=&quot;尾  页&quot; id=&quot;lastButton&quot; height=&quot;18&quot; styleName=&quot;normalStyle&quot;/&gt;\r\n	&lt;mx:ComboBox id=&quot;pageCombo&quot; dataProvider=&quot;&quot; styleName=&quot;normalStyle&quot; width=&quot;92&quot;  height=&quot;18&quot; /&gt;\r\n&lt;/mx:HBox&gt;</pre>\r\n<p>PagerEvent.as源码</p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\npackage com.eyougo.pager\r\n{\r\n	import flash.events.Event;\r\n\r\n	public class PagerEvent extends Event\r\n	{\r\n		public static const PAGECHANGED:String=&quot;pageChanged&quot;;\r\n   		public var currentPage:int;\r\n		public function PagerEvent(type:String, bubbles:Boolean=false, cancelable:Boolean=false)\r\n		{\r\n			super(type, bubbles, cancelable);\r\n		}\r\n	}\r\n}</pre>\r\n<p>其实只是最近学Flex，需要一个分页组件，找到了些源码，不过似乎都不大符合我的需求，所以我就综合他们的特点加上自己的想法写了这个。感谢Simpager和其他一些作者的劳动成果。<br />\r\n<br />\r\n话说我只是个Flex新手，目前代码量不超过1000行，有问题您得担待着点。<br />\r\n<br />\r\n还有个小问题，Flex居然不支持在CSS里直接定义组件的height或者width，真晕&hellip;&hellip;不知是我用的版本的原因还是孤陋了&hellip;&hellip;不过找到了以下这篇文章，嗯，很牛啊&hellip;&hellip; <br />\r\n<a href=\"http://www.craftymind.com/2008/03/31/hacking-width-and-height-properties-into-flexs-css-model/\">http://www.craftymind.com/2008/03/31/hacking-width-and-height-properties-into-flexs-css-model/</a></p>','2012-03-12 03:31:47',714,6,'\0',7,'EyougoPager<br />\r\n目标是开发一个简单好用的Flex列表分页组件，上手容易，引用方便，配置丰富。<br />\r\n可以与服务器端配合，支持大数据量分页读取。',0,'\0','\0',0),(23,'zip64神马玩意，坑爹的Java，救命的TrueZip','<p>前言：<br />\r\n那天晚上加班，解压文件，zip压缩的，用JDK zip API直接解，报错，一头雾水&hellip;&hellip;反复检查代码，没问题，憋死我&hellip;&hellip;<br />\r\n后来用Winrar打开，猛然发现zip64的字样标识，顺手Google百度，有用的没几条（百度全军覆没就没看见有用的），还是一堆鸟语，打开看看，哦，原来如此&hellip;&hellip;<br />\r\n<br />\r\nzip64神马玩意：<br />\r\nWiki说，原先的zip格式有各种限制，大小不能超过4G，最多包含65535个条目等等。为了与时俱进，搞出个ZIP64格式来突破了这堆限制。<br />\r\n<br />\r\n坑爹的Java：<br />\r\nWiki说，&ldquo;Java\'s built-in java.util.zip does not support it as of September 2010&rdquo;。不支持？擦，怪不得我用JDK zip API解压报错呢。21世纪都过去10年了，Java你Y的居然不与时俱进！坑爹呢！<br />\r\nWiki又说，OpenJDK里包含了，还计划在Java7里加入。OpenJDK不是Linux用的么，那Windows呢？计划？找了一把Java7，擦，还没发布呢？坑爹呢！<br />\r\n他说个不支持倒是简单直接，可我的任务还得接着整，咋办？<br />\r\n<br />\r\n救命的TrueZip：<br />\r\n接着找，找到了个TrueZip，一个开源小项目，用于zip压缩解压操作，据说这玩意的6.7版本支持zip64，赶紧的&hellip;&hellip;<br />\r\n在一堆鸟语的网站上找了半天终于找到了下载的地方，擦，没看明白该下载哪个，话说这玩意的最新版貌似分成了好多部分，我怎么知道该下载哪个？坑爹呢！<br />\r\n终于找到了个6.8版本，就一个jar，估计也应该支持zip64了，下载，开整&hellip;&hellip;<br />\r\n按照例子写了一段，擦，不好使，话说这玩意的中文资料真TNND少，就几个简单的例子，再话说鸟语资料也不多，快把Google翻底朝天了也没找到个什么好点的demo，擦，坑爹呢！啥？百度？根本不着边&hellip;&hellip;别提他！<br />\r\n绝望之际发现了TrueZip官网上这么一段话&ldquo;The low level ZIP API now supports ZIP64 extensions&rdquo;，擦，底层API现在才支持？坑爹呢！<br />\r\n底层API&hellip;&hellip;嗯&hellip;&hellip;那就搞个API看看吧，还是鸟语，对了，啥叫底层来着？大致这个还有那个属于底层吧，怀着试试看的心态写了一段代码&hellip;&hellip;擦，好使了！哇哈哈哈，一看表，凌晨五点了！我TMD干了一宿解决这问题！坑爹呢！<br />\r\n代码，代码！其实很简单，一看就明白，可我为了搞定这几行几乎熬了通宵<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/18.gif\" /></p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\nde.schlichtherle.util.zip.ZipFile zipFile = new de.schlichtherle.util.zip.ZipFile(\r\n		actpath,&quot;GBK&quot;);//注意ZipFile的所属包，不是jdk里的，&quot;GBK&quot;是zip文件的编码\r\nEnumeration e = zipFile.entries();\r\nde.schlichtherle.util.zip.ZipEntry zipEntry = null;//同样注意zipEntry的所属包\r\nwhile (e.hasMoreElements()) {\r\n	zipEntry = (de.schlichtherle.util.zip.ZipEntry) e.nextElement();\r\n	if (!zipEntry.isDirectory()) {\r\n		String fileName = zipEntry.getName();\r\n		File f = getRealFileName(this.unzipTemp, fileName);//这个f就是要解压到的目标文件，自己写即可\r\n		\r\n		//先创建，然后用流读出来，写到f里\r\n		f.createNewFile();\r\n		InputStream in = zipFile.getInputStream(zipEntry);\r\n		FileOutputStream out = new FileOutputStream(f);\r\n\r\n		byte[] by = new byte[1024];\r\n		int c;\r\n		while ((c = in.read(by)) != -1) {\r\n			out.write(by, 0, c);\r\n		}\r\n		out.close();\r\n		in.close();\r\n	}\r\n}</pre>','2011-05-19 10:29:05',604,1,'\0',7,'<p>那天晚上加班，解压文件，zip压缩的，用JDK zip API直接解，报错，一头雾水&hellip;&hellip;反复检查代码，没问题，憋死我&hellip;&hellip;<br />\r\n后来用Winrar打开，猛然发现zip64的字样标识，顺手Google百度，有用的没几条（百度全军覆没就没看见有用的），还是一堆鸟语，打开看看，哦，原来如此&hellip;&hellip;</p>',0,'\0','',0),(24,'有性格','<p>也许它可以卖得很好，<br />\r\n也许它被许多消费者接受，<br />\r\n也许它占有不错的市场份额。<br />\r\n但是，<br />\r\n它要永恒，<br />\r\n就要有性格。</p>\r\n<p>乔布斯说：活着就是要改变世界。<br />\r\n这是Apple的性格。<br />\r\n于是，那要么伟大要么垃圾的极端，<br />\r\n成为了潮流领袖的传奇。</p>\r\n<p>埃里森说：没有谁能逃出我的掌握。<br />\r\n这是Oracle的性格。<br />\r\n于是，那众人皆败唯我独赢的霸道，<br />\r\n成为了软件帝国的神话。</p>\r\n<p>内藤在正说，黑色等于ThinkPad。<br />\r\n这是ThinkPad的性格。<br />\r\n于是，那宁死不改颜色不用宽屏的固执，<br />\r\n成为了商业王者的经典。</p>\r\n<p>杰伊威尔逊说，不返工五次不上市。<br />\r\n这是Blizzard的性格。<br />\r\n于是，那力求完美研发没有时间表的跳票，<br />\r\n成为了游戏大鳄的精彩。</p>\r\n<p>有性格，<br />\r\n才能永恒。</p>','2011-05-31 21:44:51',320,1,'\0',8,'<p>也许它可以卖得很好，<br />\r\n也许它被许多消费者接受，<br />\r\n也许它占有不错的市场份额。<br />\r\n但是，<br />\r\n它要永恒，<br />\r\n就要有性格。</p>',1,'\0','\0',1),(25,'庆祝访问量突破1W！感谢支持……','庆祝访问量突破1W！感谢支持&hellip;&hellip;<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/31.gif\" />','2011-06-13 17:22:27',282,1,'\0',8,'庆祝访问量突破1W！感谢支持&hellip;&hellip;<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/31.gif\" />',0,'\0','',0),(26,'懒惰、急躁和傲慢（Laziness, Impatience and hubris）','<div class=\"asset-content entry-content\" id=\"main-content\">\r\n<div class=\"asset-body\">\r\n<p>Perl语言的发明人Larry Wall说，好的程序员有3种美德： 懒惰、急躁和傲慢（Laziness, Impatience and hubris）。</p>\r\n<p>Laziness<br />\r\nThe quality that makes you go to great effort to reduce overall energy expenditure. It makes you write labor-saving programs that other people will find useful, and document what you wrote so you don\'t have to answer so many questions about it. Hence, the first great virtue of a programmer, Also hence, this book.</p>\r\n</div>\r\n<div class=\"asset-more\" id=\"more\">\r\n<p>懒惰：<br />\r\n是这样一种品质，它使得你花大力气去避免消耗过多的精力。它敦促你写出节省体力的程序，同时别人也能利用它们。为此你会写出完善的文档，以免别人问你太多问题。</p>\r\n<p>Impatience<br />\r\nThe anger you feel when the computer is being lazy. This makes you write programs that don\'t just react to your needs, but actually anticipate them. Or at least pretend to. Hence, the second great virtue of a programmer.</p>\r\n<p>急躁：<br />\r\n是这样一种愤怒&mdash;&mdash;当你发现计算机懒洋洋地不给出结果。于是你写出更优秀的代码，能尽快真正的解决问题。至少看上去是这样。</p>\r\n<p>Hubris<br />\r\nExcessive pride, the sort of thing Zeus zaps you for. Also the quality that makes you write (and maintain) programs that other people won\'t want to say bad things about. Hence, the third great virtue of a programmer.</p>\r\n<p>傲慢：<br />\r\n极度的自信，使你有信心写出（或维护）别人挑不出毛病的程序。</p>\r\n</div>\r\n</div>\r\n<script src=\"/newwindow.js\" type=\"text/javascript\"></script>','2011-07-01 11:18:21',373,1,'\0',7,'Perl语言的发明人Larry Wall说，好的程序员有3种美德： 懒惰、急躁和傲慢（Laziness, Impatience and hubris）。',2,'\0','\0',1),(27,'超强改造：FCKEditor上传文件与Struts2的完美结合','<p>一同事头疼于FCKEditor的图片上传，我吹牛说，这个我擅长俺的博客就是用的这个。于是打开博客，将图片上传演示一把，没想到的是：嗯？报错了？<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/11.gif\" />怎么可能？我当初肯定测试过的啊&hellip;&hellip;好久没用了，让我想想&hellip;&hellip;打开代码，琢磨ing&hellip;&hellip;<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/45.gif\" /></p>\r\n<p>哦，明白了。<br />\r\n此事要从头说起<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/13.gif\" />。<br />\r\n先说下本博客用的FCKEditor是2.6版本，Struts为2.1版本。</p>\r\n<p>FCKEditor与Java的连接上传封装在ConnectorServlet里，用的是commons-fileupload组件解析request。<br />\r\n在此不细表此基础知识，不懂请Google一把FCKEditor的Java上传配置，再看看ConnectorServlet的源码。</p>\r\n<p>问题是：博客使用了Struts2框架，Struts2的Filter会过滤到上传文件的request，封装为Struts2自己的MultiPartRequestWrapper，这个时候再到FCKEditor里的ConnectorServlet中用commons-fileupload组件解析request，就无法获取到正确的文件流，所以上传失败。<br />\r\n之所以原来是没问题的，是因为当时web.xml配置的Struts2只过滤后缀为action的请求，对于上传文件的请求不做处理。而后来更新了URLRewrite，更改Struts2的Filter配置为过滤所有的请求，上传文件自然也就被过滤到了。</p>\r\n<p>翻查了一下网络上的解决方案，都是更改Struts2的web.xml配置，只过滤后缀为action的请求或者其他struts2需要处理的请求。<br />\r\n这个解决方案在本博客基本行不通，因为使用URLRewrite并且伪装url的原因，绝大部分url都需要匹配Struts2的过滤器，不可能一个一个去配，web.xml中的Filter貌似又没有类似exclude的配置方式，这可头疼了。</p>\r\n<p>除此之外，解决这个冲突不外乎两个方案，一是改造FCKEditor的ConnectorServlet，二是改造Struts2的Filter。</p>\r\n<p>改造Struts2的Filter意味着所有上传文件的request都不再封装了，这恐怕不合适，万一以后我其他地方要用到呢？</p>\r\n<p>那就只有改造FCKEditor的ConnectorServlet了，这还是有两条路，第一条路是彻底改变FCKEditor的Java上传方式，抛弃原来的ConnectorServlet，改为Struts2中的Action，第二条路是对ConnectorServlet进行有限改造，让它在解析request时能够解析Struts2封装的MultiPartRequestWrapper。</p>\r\n<p>其实第一条路更好些，这样FCKEditor的文件上传就在Struts2的Action管理体系下，方便进行Struts2拦截器等一系列配置，同时也就更方便地解决了安全问题，不用对ConnectorServlet做安全性处理比如专门加个Filter或者在ConnectorServlet中做一些侵入性的判断。至于这么做是否麻烦，我还没有尝试，因为目前我走的是第二条路。但以后一定会这么做，大家可以等待本文的续篇了，<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/21.gif\" />。</p>\r\n<p>第二条路，Struts2本身的文件上传默认使用的就是commons-fileupload组件，理论上是行得通，只是要仔细研究一下ConnectorServlet使用commons-fileupload组件解析request的方式。</p>\r\n<p>当真正开始去看的时候，我才发现这TMD其实不那么简单，虽然最终写出来确实没几行代码，但要把Struts2中封装request、对上传请求拦截和commons-fileupload解析request的那一堆源码看懂了分析明白了并且让两者能对应得上才是要命的功夫&hellip;&hellip;<br />\r\n更要命的是Struts2封装的MultiPartRequestWrapper对象只提供了一些直接面对文件信息的public方法，并没有把被封装的原始request开放出来，否则就简单了，我直接获取原始request传递给commons-fileupload就哦了。难道要让我用反射不成？</p>\r\n<p>又看源码，发现ConnectorServlet使用commons-fileupload解析request生成了一个FileItem对象用于存储文件信息，OK，这可能就是突破口。我能不能先获取MultiPartRequestWrapper对象里封装的文件信息，然后绕过原有的解析，仿照commons-fileupload的源码重新封装生成一个FileItem对象去使用呢？</p>\r\n<p>按照这个思路，参照源码，一边写一边测一边想一边改，好几个参数绕来绕去，有时就是靠猜，终于调试成功，于是形成了以下的代码。因为FCKEditor上传文件是ConnectorServlet中的doPost方法，所以我将改造之后的doPost方法完整贴出来，按照注释应该可以看懂：</p>\r\n<pre class=\"brush: java;\" title=\"code\">\r\npublic void doPost(HttpServletRequest request, HttpServletResponse response)\r\n	        throws ServletException, IOException {\r\n		logger.debug(&quot;Entering Connector#doPost&quot;);\r\n\r\n		response.setCharacterEncoding(&quot;UTF-8&quot;);\r\n		response.setContentType(&quot;text/html; charset=UTF-8&quot;);\r\n		response.setHeader(&quot;Cache-Control&quot;, &quot;no-cache&quot;);\r\n		PrintWriter out = response.getWriter();\r\n\r\n		String commandStr = request.getParameter(&quot;Command&quot;);\r\n		String typeStr = request.getParameter(&quot;Type&quot;);\r\n		String currentFolderStr = request.getParameter(&quot;CurrentFolder&quot;);\r\n\r\n		logger.debug(&quot;Parameter Command: {}&quot;, commandStr);\r\n		logger.debug(&quot;Parameter Type: {}&quot;, typeStr);\r\n		logger.debug(&quot;Parameter CurrentFolder: {}&quot;, currentFolderStr);\r\n\r\n		UploadResponse ur;\r\n\r\n		// if this is a QuickUpload request, \'commandStr\' and \'currentFolderStr\'\r\n		// are empty\r\n		if (Utils.isEmpty(commandStr) &amp;&amp; Utils.isEmpty(currentFolderStr)) {\r\n			commandStr = &quot;QuickUpload&quot;;\r\n			currentFolderStr = &quot;/&quot;;\r\n		}\r\n\r\n		if (!RequestCycleHandler.isEnabledForFileUpload(request))\r\n			ur = new UploadResponse(UploadResponse.SC_SECURITY_ERROR, null, null,\r\n			        Messages.NOT_AUTHORIZED_FOR_UPLOAD);\r\n		else if (!CommandHandler.isValidForPost(commandStr))\r\n			ur = new UploadResponse(UploadResponse.SC_ERROR, null, null, Messages.INVALID_COMMAND);\r\n		else if (typeStr != null &amp;&amp; !ResourceTypeHandler.isValid(typeStr))\r\n			ur = new UploadResponse(UploadResponse.SC_ERROR, null, null, Messages.INVALID_TYPE);\r\n		else if (!UtilsFile.isValidPath(currentFolderStr))\r\n			ur = UploadResponse.UR_INVALID_CURRENT_FOLDER;\r\n		else {\r\n			ResourceTypeHandler resourceType = ResourceTypeHandler.getDefaultResourceType(typeStr);\r\n\r\n			String typePath = UtilsFile.constructServerSidePath(request, resourceType);\r\n			String typeDirPath = getServletContext().getRealPath(typePath);\r\n\r\n			File typeDir = new File(typeDirPath);\r\n			UtilsFile.checkDirAndCreate(typeDir);\r\n\r\n			File currentDir = new File(typeDir, currentFolderStr);\r\n\r\n			if (!currentDir.exists())\r\n				ur = UploadResponse.UR_INVALID_CURRENT_FOLDER;\r\n			else {\r\n\r\n				String newFilename = null;\r\n				FileItemFactory factory = new DiskFileItemFactory();\r\n				ServletFileUpload upload = new ServletFileUpload(factory);\r\n\r\n				upload.setHeaderEncoding(&quot;UTF-8&quot;);//解决上传中文文件名问题\r\n				\r\n				try {\r\n					//---------------FCKEditor上传文件与Struts2结合改造-----开始----------------------------\r\n					FileItem uplFile = null;\r\n					//基本思路：如果request为Struts2封装的MultiPartRequestWrapper，则自行解析该request，重新构造FileItem，将Struts2上传的临时文件传递给FileItem\r\n					if(request instanceof MultiPartRequestWrapper){\r\n						//转为Struts2封装的MultiPartRequestWrapper\r\n						MultiPartRequestWrapper mr = (MultiPartRequestWrapper)request;\r\n\r\n						//通过MultiPartRequestWrapper的方法取得相应的属性\r\n						Enumeration&lt;String&gt; e = mr.getFileParameterNames();\r\n						String fieldName = &quot;&quot;;\r\n						//只获取第一个文件\r\n						if(e.hasMoreElements()){\r\n							fieldName = e.nextElement();\r\n						}\r\n						//获取Struts2封装好的临时文件信息\r\n						File file = mr.getFiles(fieldName)[0];\r\n						String fileName = mr.getFileNames(fieldName)[0];\r\n						String contentType = mr.getContentTypes(fieldName)[0];\r\n						//使用fileupload组件API重新构造一个FileItem\r\n						DiskFileItemFactory fac = new DiskFileItemFactory();\r\n					    fac.setSizeThreshold(0);\r\n					    fac.setRepository(file.getParentFile());\r\n					    uplFile = fac.createItem(fieldName, contentType, false, fileName);\r\n					    //将Struts2封装好的临时文件传递给这个FileItem\r\n					    Streams.copy(new FileInputStream(file), uplFile.getOutputStream(),\r\n	                            true);\r\n					}else{\r\n						//如果不是Struts2封装的MultiPartRequestWrapper，按原有执行\r\n						//-----------以下两行基本是原有代码---------------\r\n						List&lt;FileItem&gt; items = upload.parseRequest(request);\r\n\r\n						uplFile = items.get(0);\r\n					}\r\n					//---------------FCKEditor上传文件与Struts2结合改造-----结束----------------------------\r\n					String rawName = UtilsFile.sanitizeFileName(uplFile.getName());\r\n					String filename = FilenameUtils.getName(rawName);\r\n					String baseName = FilenameUtils.removeExtension(filename);\r\n					String extension = FilenameUtils.getExtension(filename);\r\n\r\n					if (!ExtensionsHandler.isAllowed(resourceType, extension))\r\n						ur = new UploadResponse(UploadResponse.SC_INVALID_EXTENSION);\r\n					else {\r\n						\r\n						// construct an unique file name\r\n						File pathToSave = new File(currentDir, filename);\r\n						int counter = 1;\r\n						while (pathToSave.exists()) {\r\n							newFilename = baseName.concat(&quot;(&quot;).concat(String.valueOf(counter))\r\n							        .concat(&quot;)&quot;).concat(&quot;.&quot;).concat(extension);\r\n							pathToSave = new File(currentDir, newFilename);\r\n							counter++;\r\n						}\r\n\r\n						if (Utils.isEmpty(newFilename))\r\n							ur = new UploadResponse(UploadResponse.SC_OK, UtilsResponse\r\n							        .constructResponseUrl(request, resourceType, currentFolderStr,\r\n							                true, ConnectorHandler.isFullUrl()).concat(filename));\r\n						else\r\n							ur = new UploadResponse(UploadResponse.SC_RENAMED,\r\n							        UtilsResponse.constructResponseUrl(request, resourceType,\r\n							                currentFolderStr, true, ConnectorHandler.isFullUrl())\r\n							                .concat(newFilename), newFilename);\r\n\r\n						// secure image check\r\n						if (resourceType.equals(ResourceTypeHandler.IMAGE)\r\n						        &amp;&amp; ConnectorHandler.isSecureImageUploads()) {\r\n							if (UtilsFile.isImage(uplFile.getInputStream()))\r\n								uplFile.write(pathToSave);\r\n							else {\r\n								uplFile.delete();\r\n								ur = new UploadResponse(UploadResponse.SC_INVALID_EXTENSION);\r\n							}\r\n						} else\r\n							uplFile.write(pathToSave);\r\n\r\n					}\r\n				} catch (Exception e) {\r\n					ur = new UploadResponse(UploadResponse.SC_SECURITY_ERROR);\r\n				}\r\n			}\r\n\r\n		}\r\n\r\n		out.print(ur);\r\n		out.flush();\r\n		out.close();\r\n\r\n		logger.debug(&quot;Exiting Connector#doPost&quot;);\r\n	}</pre>\r\n<p><br />\r\n好了，任务完成。代码里还包括了解决中文问题，这个网上有其他文章说明，看官可自行搜索&hellip;&hellip;</p>\r\n<p>为了追求更加完美地解决这个问题，我决定下一步走文中提出的第一条路，彻底改变FCKEditor在Struts2下的Java上传方式，抛弃ConnectorServlet，改为Struts2中的Action。敬请期待哦，嘿嘿。<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/14.gif\" /></p>','2011-08-11 13:35:11',443,1,'\0',7,'<p>一同事头疼于FCKEditor的图片上传，我吹牛说，这个我擅长俺的博客就是用的这个。于是打开博客，将图片上传演示一把，没想到的是：嗯？报错了？<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/11.gif\" />怎么可能？我当初肯定测试过的啊&hellip;&hellip;好久没用了，让我想想&hellip;&hellip;打开代码，琢磨ing&hellip;&hellip;<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/45.gif\" /></p>\r\n<p>哦，明白了。<br />\r\n此事要从头说起<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/13.gif\" />&hellip;&hellip;</p>\r\n<p>博客使用了Struts2框架，Struts2的Filter会过滤到上传文件的request，封装为Struts2自己的MultiPartRequestWrapper，这个时候再到FCKEditor里的ConnectorServlet中用commons-fileupload组件解析request，就无法获取到正确的文件流，所以上传失败。<br />\r\n之所以原来是没问题的，是因为当时web.xml配置的Struts2只过滤后缀为action的请求，对于上传文件的请求不做处理。而后来更新了URLRewrite，更改Struts2的Filter配置为过滤所有的请求，上传文件自然也就被过滤到了。</p>\r\n<p>翻查了一下网络上的解决方案，都是更改Struts2的web.xml配置，只过滤后缀为action的请求或者其他struts2需要处理的请求。<br />\r\n这个解决方案在本博客基本行不通，因为使用URLRewrite并且伪装url的原因，绝大部分url都需要匹配Struts2的过滤器，不可能一个一个去配，web.xml中的Filter貌似又没有类似exclude的配置方式，这可头疼了。</p>',0,'\0','',0),(28,'JAVA开发为什么是这样的','为什么要封装继承多态，为什么要低耦合高内聚；<br />\r\n为什么要分模块，为什么面向接口，为什么要有spring；<br />\r\n为什么要分层，为什么要下层独立，为什么要各层不跨越；<br />\r\n为什么要单例，为什么要Cache，为什么要有Annotation，为什么要用hibernate。','2011-08-11 13:28:59',352,1,'\0',7,'<p>JAVA开发为什么是这样的&mdash;&mdash;漫谈JAVA架构设计思路。有没有类似的书？</p>',0,'\0','',1),(29,'关于一道1到N自然数排序的华为面试题','<p>这是数年前发表在本人CSDN博客上的一篇小文，转过来，是想再一次抨击那些不顾正确与否一味埋头转帖的误人子弟的还非说别人较真的家伙&hellip;&hellip;<font class=\"Apple-style-span\" color=\"#626262\" face=\"Arial, \'Century Gothic\', sans-serif, \'Gill Sans\', ����\"><span class=\"Apple-style-span\" style=\"line-height: 21px;\"><br />\r\n</span></font><br />\r\n在网上逛某论坛时，发现一所谓的高手贴了这样一道题，说是华为的面试题，如下：<br />\r\n有N个大小不等的自然数（1--N），请将它们由小到大排序。<br />\r\n要求程序算法：时间复杂度为O(n)，空间复杂度为O(1)。<br />\r\n高手经过一番分析后，说该题其实很简单，给出了答案如下：</p>\r\n<pre title=\"code\" class=\"brush: c++;\">\r\nvoid   sort(int   e[],   int   n)   \r\n{   \r\n    int   i;   \r\n    int   t;   /*临时变量：空间复杂度O(1)*/ \r\n\r\n    for   (i=1;   i &lt;n+1;   i++)   /*时间复杂度O(n)*/   \r\n     {   \r\n          t   =   e[e[i]];   /*下标为e[i]的元素，排序后其值就是e[i]*/   \r\n          e[e[i]]   =   e[i];   \r\n          e[i]   =   t;   \r\n     }   \r\n} </pre>\r\n<p>看了看总觉得不大妙，用他这个算法写了个程序试了下，数组{5,4,3,1,2}排序完之后是{2,1,3,4,5}，根本没有达到效果，一时有些迷茫．仔细想了想，虽然该高手的分析没有问题，但在实现上忽略了一些东西，以上算法中每次赋值只是保证了e[e[i]]的正确，却无法保证e[i]的正确，之后i值变为i+1，该次赋值就结束了，所以才会出现问题。 <br />\r\n思考良久，没有想出正确的来，看来华为还是有些难度的。 网上查了下，结果让我很郁闷，许多人都是把上面的解法直接转贴过来，根本不在乎其中内容的正确性，估计连脑子也没过就直接贴上去了，最让我无法忍受的是某些装B的高手。 煞有介事地冠之以题目&ldquo;从华为一道面试题浅谈计算机专业在校大学生该如何学习专业课程&rdquo;，然后从就业形势严峻谈起，引出该题目，还来了一句很自信的话&ldquo;简单一道排序题，考倒多少读书人！&rdquo;，然后分析该题，最后说通过这个题谈谈如何学习专业课程，还建议多在基础知识方面下工夫，有条件的多做习题、多上机、勤思考，多看看同一个问题其他人是怎么解决的，等等站在高手角度教育人的一番话。<br />\r\n于是期待成为编程高手的我耐心看完了这裹脚布一般的大论，再看他给出的解法如下：</p>\r\n<pre title=\"code\" class=\"brush: c++;\">\r\nvoid sort(int e[], int n)\r\n{\r\n int i;\r\n int t; /*临时变量：空间复杂度O(1)*/\r\n\r\n for (i=1; i&lt;n+1; i++) /*时间复杂度O(n)*/\r\n {\r\n  t = e[e[i]]; /*下标为e[i]的元素，排序后其值就是e[i]*/\r\n  e[e[i]] = e[i];\r\n  e[i] = t;\r\n }\r\n}\r\n\r\nvoid main()\r\n{ \r\n #define MAX 10\r\n int i, a[MAX+1]; \r\n \r\n printf(&quot;Input the number from 1 to %d: &quot;,MAX);\r\n for (i=1; i&lt;MAX+1; i++)\r\n {\r\n  scanf(&quot;%d&quot;,&amp;a[i]);\r\n }\r\n  \r\n sort(a,MAX);\r\n\r\n printf(&quot; ====sort over==== &quot;);\r\n for (i=1; i&lt;MAX+1; i++)\r\n {\r\n  printf(&quot;%d &quot;,a[i]);\r\n }\r\n\r\n printf(&quot; &quot;);\r\n system(&quot;pause&quot;);\r\n}</pre>\r\n<p>靠，怎么和最上面的算法一样？上面的算法根本不对啊！我本来懒得说什么，但还是忍不住。 <br />\r\n不知该高手在建议&ldquo;多上机&rdquo;的同时是否上机亲自验证了一下自己的算法？不知该高手在建议&ldquo;勤思考&rdquo;的同时是否把这个题看得很简单但还是认真思考了？以自己的这种不负责态度还如此这样教育新人，是自以为是，更是误人子弟！要是我没仔细想就按这个记下来了，以后岂不是&hellip;&hellip; <br />\r\n闲话不扯了，接着说这道题，我这个菜鸟虽然知道上面的算法不对，可自己也想不出什么好的改进方法来，幸好我又百度到了一个论坛，该论坛中有人给出的解答如下：</p>\r\n<pre title=\"code\" class=\"brush: c++;\">\r\nint cnt = 0;//辅助变量，不是算法组成部分\r\n\r\nvoid sort(int arr[], int n)\r\n\r\n{\r\n\r\n int t;  /*临时变量：空间复杂度O(1)*/ \r\n\r\n //可以证明这个算法每次交换必然将一个数字正确安排到位，而且最多只有N次交换。 \r\n\r\n //具体体现在cnt的值上，所以虽然是二重循环仍然是时间复杂度O(n)\r\n\r\n for (int i = 1; i &lt;= n; i++)\r\n\r\n {\r\n\r\n  while(arr[i] != i)\r\n\r\n  {\r\n\r\n   t = arr[arr[i]];\r\n\r\n   arr[arr[i]] = arr[i];\r\n\r\n   arr[i] = t;\r\n\r\n   ++cnt;\r\n\r\n  }\r\n\r\n }\r\n\r\n}</pre>\r\n<p>又来到CSDN上面发帖问，也有人如此为我解答，算出来的结果没有问题，根据给出的解释，复杂度也应该符合要求，该问题应该就是如此答案了吧。如果您有什么新的见解，请不吝赐教。<br />\r\n最后再BS一下自以为是的所谓高手，还有那些只顾埋头转贴的人。</p>','2011-11-21 13:46:50',251,1,'\0',7,'这是数年前发表在本人CSDN博客上的一篇小文，转过来，是想再一次抨击那些不顾正确与否一味埋头转帖的误人子弟的还非说别人较真的家伙&hellip;&hellip;<br />\r\n<br />\r\n在网上逛某论坛时，发现一所谓的高手贴了这样一道题，说是华为的面试题，如下：<br />\r\n有N个大小不等的自然数（1--N），请将它们由小到大排序。<br />\r\n要求程序算法：时间复杂度为O(n)，空间复杂度为O(1)。',0,'\0','\0',0),(30,'程序员装B指南-转','<h3 style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">一、准备工作</h3>\r\n<br />\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">&ldquo;工欲善其事必先利其器。&rdquo;</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">1.电脑不一定要配置高，但是双屏是必须的，越大越好，能一个横屏一个竖屏更好。一个用来查资料，一个用来写<span style=\"padding: 0px; border-width: 0px; margin: 0px; \">代码</span>  。总之要显得信息量很大，效率很高。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">2.椅子不一定要舒服，但是一定要可以半躺着。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">3.大量的便签，各种的颜色的，用来记录每天要完成的事务，多多益善。沿着电脑屏幕的边框，尽量贴满，显出有很多事情的样子。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">4.工具书，orelly的，机械工业，电子工业什么的都可以，能英文就英文，不行影印版的也可以，反正越厚越好，而且千万不要放在书架上，一定要堆在桌上，半打开状。<br />\r\n&nbsp;</p>\r\n<h3 style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">二、从进门开始</h3>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">1.着装！着装！不管你是去实验室，或者去公司的大楼，在或者是小公司的民宅，或是自己创业的黑作坊；无论是春夏秋冬白天晚上刮风下雨电闪雷鸣台风龙卷风，一个装b的程序员都要十分在意自己着装！这里只提出参考建议。初级装：衬衣+牛仔裤+休闲鞋。中级装：T恤+宽松短裤+拖鞋。高级装：背心+宽松大花裤衩+人字拖。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">2.得体的举止。在走廊以及任何形式的过道里，一定要双手插兜，走得像个痞子，至少要看起来有点反社会，如若不行，可走文弱天才型geek路线。。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">3.如果有女性在你背后指指点点，小声嘀咕说这一定是一个技术男的时候，应该先低头，然后保持低头状态，缓缓回头，坏坏地蔑笑但是不要出声，然后快步前行。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">4.进门后，一定不要跟任何人打招呼，笔直走向自己的位置，最多路过打一杯咖啡，千万不要有多余的动作，显示出自己的专注与心无旁骛。<br />\r\n&nbsp;</p>\r\n<h3 style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">三、坐下就不要再动了</h3>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">1.坐下以后，姿势需要略微后仰，能翘着二郎腿最好了，然后在后仰的情况下低着头，以便看到屏幕，然后千万就不要再动了。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">2.粗暴地把电脑前的大堆书推开一个口，然后摘下电脑上的一个便签，看一眼，不过3秒，可以开始coding了。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">3.能不用IDE就不要用，实在装不了，无论IDE是什么，一定要调成DOS那种黑色背景的。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">4.如果写前台界面，就不停地调试后台代码；如果写java，就在里面混编C；如果写C，就在里面混编汇编。不光要coding，还要时不时的翻出一本什么英文的书翻一翻，看不懂就看看插图，然后扔到面前假装懂了继续coding。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">5.什么看起来高端就用什么，不要管实用不实用。例如对C++：switch统统重构成多态；如果有指针，统统改成智能的；C++一定要自己写  template；数字是全部要替换成宏的名字能起多长就起多长；struct就不要出现了，如果出现，也一定要用__attriburte__修饰一下；运算都是位操作的；操作符都是重载的；网络都是并发缓冲线程池的；int只用int32_t声明的;继承不用普通的，什么多继承虚继承啊；helloworld也要写捕获异常的；后人一看代码，中间一堆关键字  extern,asm,auto,XXXXX_cast,volatile,explicit,register,template，让一般总在敲  int,if,else,for的小<span style=\"padding: 0px; border-width: 0px; margin: 0px; \">程序员</span>  顿时心生崇拜。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">6.注释？算了吧。只有两个路线可以选：一，变量名起得巨长无比，看代码就和读英文文章一样顺畅，根本不需要加注释。  二，代码无比晦涩，加不加注释根本无影响。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">7.千万不要用IM工具交流，千万不要问同事问题，显得自己没有水平，都是自己上网或者查书。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">8.无论是同事间开玩笑或者发生任何群体性时间，不要抬头，更不要东张西望，即使地震火灾，也一定要先提交代码再行离开。<br />\r\n&nbsp;</p>\r\n<h3 style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">四、潇洒地离开</h3>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">1.人走，主机是千万千万不能关的，至少要跑个daily  build，实在不行正在svn提交也勉强算过关。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">2.书应该已经又堆到屏幕前了，千万不要整理，明天再来推开。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">3.不强求最后一个走，但一定要所有的非程序员，什么市场啊前台啊pm啊都走光了，才可以走。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">4.走得时候一定要率性，千万不要收拾任何东西，站起来，出门，好的，就这样。</p>\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">5.如果今天一定要说句话的话，找到那个最苦逼的<span style=\"padding: 0px; border-width: 0px; margin: 0px; \">程序员</span>  ，跟他说，你进度太慢了啊，不要老让我等你。</p>','2012-09-14 01:03:58',63,3,'\0',8,'<h3 style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">一、准备工作</h3>\r\n<br />\r\n<p style=\"PADDING-BOTTOM: 0px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 0px\">&ldquo;工欲善其事必先利其器。&rdquo;</p>',0,'\0','\0',1),(31,'卡巴斯基！网页图片传输：Transfer-Encoding:chunked和Content-Length','发现博客页面一直在读啊读，最后验证码图片还总是无法显示出来。 <br />\r\n多次刷新，换浏览器，依然如此。  难道是验证码图片太大了？1k啊，不能啊。 <br />\r\n<br />\r\n打开调试，看到验证码图片俨然已经读取完了，页面也显示了，但网页还在load，过一两分钟后，调试栏的图片状态变成了failed，在网页上这图片显示XX了，靠。<br />\r\n<br />\r\n和一般的Java web应用产生验证码图片逻辑没有任何不同，此验证码图片在服务端动态生成，通过HttpResponse的OutputStream输出给客户端。<br />\r\n猜想：传输图片流时最后发生了些什么状况导致图片流传输失败么？  <br />\r\n<br />\r\n开虚拟机，进linux，准备研究下代码，先开浏览器试了下，嗯？无此问题。<br />\r\n服务端加了调试代码，无问题，OutputStream正常flush，正常close。都尼玛close了，难道传输流还能有问题？ <br />\r\n又猜想： 不是服务端问题？windows有问题linux没问题，不用说，那两者肯定是有不同了。莫不是和浏览器本机系统有关？ <br />\r\n难道windows下，对http协议的某个参数有特殊解释？ <br />\r\n<br />\r\n决定把Response Header的各个参数依次分析测试一遍。<br />\r\n和数据传输打交道的参数也就是这几个：<br />\r\nCache-Control？去掉各种Cache-Control参数，没作用。 <br />\r\nTransfer-Encoding:chunked？这个参数和流的传输还真的有关系，我擦。  <br />\r\n<br />\r\n维基百科： <br />\r\n分块传输编码（Chunked transfer encoding）是超文本传输协议（HTTP）中的一种数据传输机制，允许HTTP由网页服务器发送给客户端应用（ 通常是网页浏览器）的数据可以分成多个部分。分块传输编码只在HTTP协议1.1版本（HTTP/1.1）中提供。 <br />\r\n也就是说，服务器发给客户端数据时一边创建一边发送，因为不知道总体内容大小，于是分块传输，直到传输完成。  <br />\r\n这个参数和Content-Length是不会在header中同时存在的，也就是说如果知道要传输的内容大小，就会发送Content-Length给客户端，不知道的话就发送Transfer-Encoding:chunked。 <br />\r\n但这真的对接收流有影响吗？<br />\r\n协议都是统一的，windows不能这么挫吧。linux下Transfer-Encoding:chunked也没问题啊。  <br />\r\n<br />\r\n那windows下这该死的http连接究竟是怎么传送到浏览器里的呢？<br />\r\n突然想起装了卡巴斯基这家伙，http连接是要经过这家伙过滤的。难道真的是这家伙在捣鬼？<br />\r\n果断关掉卡巴，我擦，好了！  <br />\r\n<br />\r\n但怎么能让浏览网站的人不装或者关掉卡巴斯基呢？这显然是不可能的事情。 <br />\r\n<br />\r\n再说网页上普通的静态图片，经过卡巴斯基也是没问题的。  那普通的静态图片和这个验证码图片的不同在哪？<br />\r\n<br />\r\n静态图片发送了Content-Length给浏览器，不是分块传输。 看来确实和Transfer-Encoding:chunked这个参数有关系。  <br />\r\n<br />\r\n如果使用了OutputStream.flush()，web容器是不知道怎么返回Content-Length的，所以会用Transfer-Encoding:chunked方式返回。  <br />\r\n如手动设定了Content-Length，web容器就不会用Transfer-Encoding:chunked方式。<br />\r\n<br />\r\n于是在代码中加上 <br />\r\n<pre title=\"code\" class=\"brush: java;\">\r\nByteArrayOutputStream baos = new ByteArrayOutputStream(); \r\nImageIO.write(bufferImage, &quot;jpg&quot;, baos); \r\nbyte[] jpegData = baos.toByteArray(); \r\nresponse.setHeader(&quot;Content-Length&quot;, String.valueOf(jpegData.length));</pre>\r\n<p>\r\n<br />\r\n先将图片按验证码图片按jpg格式输出到ByteArrayOutputStream，然后获取length手动设置Content-Length到response的header中。 <br />\r\n也就是直接告诉客户端该内容的长度，当作一个普通静态图片处理。  之后再正常输出给HttpResponse的OutputStream。 <br />\r\n<br />\r\n开卡巴斯基测试，没问题了！ <br />\r\n<br />\r\n看来Transfer-Encoding:chunked这个参数真的影响到卡巴斯基对http连接的检查处理，这其中该死的玄妙之处，我就实在不了解了。\r\n</p>','2013-01-10 01:48:15',NULL,1,'\0',7,'发现博客页面一直在读啊读，最后验证码图片还总是无法显示出来。&nbsp;<br />\r\n多次刷新，换浏览器，依然如此。 难道是验证码图片太大了？1k啊，不能啊。&nbsp;<br />\r\n<br />\r\n打开调试，看到验证码图片俨然已经读取完了，页面也显示了，但网页还在load，过一两分钟后，调试栏的图片状态变成了failed，在网页上这图片显示XX了，靠。<br />\r\n<br />\r\n和一般的Java web应用产生验证码图片逻辑没有任何不同，此验证码图片在服务端动态生成，通过HttpResponse的OutputStream输出给客户端。<br />\r\n猜想：传输图片流时最后发生了些什么状况导致图片流传输失败么？&nbsp;',0,'\0','',1),(32,'Maven Assembly Plugin打包引起的Spring配置文件错误Unable to locate Spring NamespaceHandler for XML schema namespace','<p>一个项目，Maven管理，引用了spring的多个包，使用<a href=\"http://maven.apache.org/plugins/maven-assembly-plugin/\">Maven Assembly Plugin</a>也就是mvn assembly:assembly命令进行打包，之后运行该jar时出现以下问题：</p>\r\n<p><span style=\"color: rgb(51, 102, 255);\">Exception in thread &quot;main&quot; org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Unable to locate Spring NamespaceHandler for XML schema namespace</span></p>\r\n<p>查了一下，发现这是Maven Assembly Plugin的一个bug，详细见这里：<br />\r\n<a href=\"http://jira.codehaus.org/browse/MASSEMBLY-360\">http://jira.codehaus.org/browse/MASSEMBLY-360</a></p>\r\n<p><strong>原因是： </strong><br />\r\nEvery Spring JAR file contains a META-INF directory with files like spring.handlers and spring.schemas which contain list of locations of respectively namespace handlers and schemas. Unfortunately these files aren\'t merged during packaging so the META_INF of the executable JAR file only contains the last one added.  <br />\r\n也就是说，因为spring的多个包都在META_INF文件夹中包含有spring.handlers和spring.schemas，并且不相同，而Maven Assembly Plugin在打包的时候，不会将这些不同的文件合并后放到可执行jar中，而是只会添加其中一个，这样就导致了一些spring.handlers或spring.schemas的文件内容丢失了。</p>\r\n<p>怎么办呢，在Maven Assembly Plugin的官网上有这么一句话：If your project wants to package your artifact in an uber-jar, the assembly plugin provides only basic support. For more control, use the <a href=\"http://maven.apache.org/plugins/maven-shade-plugin\">Maven Shade Plugin</a>。 <br />\r\n上面引用的bug地址中评论里有具体解决办法，但经过我结合其他文章提供的办法进行了多次尝试，似乎不需要那么麻烦。</p>\r\n<p><strong>具体解决方案如下：</strong><br />\r\n1.不使用Maven Assembly Plugin也就是mvn assembly:assembly命令进行打包。 <br />\r\n2.在pom.xml中添加<a href=\"http://maven.apache.org/plugins/maven-shade-plugin\">Maven Shade Plugin</a>。使用Maven Shade Plugin的Resource AppendingTransformer，具体见<br />\r\n<a href=\"http://maven.apache.org/plugins/maven-shade-plugin/examples/resource-transformers.html#AppendingTransformer\">http://maven.apache.org/plugins/maven-shade-plugin/examples/resource-transformers.html#AppendingTransformer</a>。<br />\r\n配置文件</p>\r\n<pre title=\"code\" class=\"brush: xhtml;\">\r\n&lt;plugin&gt;\r\n    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n    &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;\r\n    &lt;executions&gt;\r\n        &lt;execution&gt;\r\n            &lt;phase&gt;package&lt;/phase&gt;\r\n            &lt;goals&gt;\r\n                &lt;goal&gt;shade&lt;/goal&gt;\r\n            &lt;/goals&gt;\r\n            &lt;configuration&gt;\r\n                &lt;transformers&gt;\r\n                    &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&gt;\r\n                        &lt;mainClass&gt;com.eyougo.blog.test.Main&lt;/mainClass&gt;&lt;!--这是配置主运行类的--&gt;\r\n                    &lt;/transformer&gt;\r\n                    &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.AppendingTransformer&quot;&gt;\r\n                        &lt;resource&gt;META-INF/spring.handlers&lt;/resource&gt;&lt;!--这是用于合并文件的--&gt;\r\n                    &lt;/transformer&gt;\r\n                    &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.AppendingTransformer&quot;&gt;\r\n                        &lt;resource&gt;META-INF/spring.schemas&lt;/resource&gt;&lt;!--这是用于合并文件的--&gt;\r\n                    &lt;/transformer&gt;\r\n                &lt;/transformers&gt;\r\n            &lt;/configuration&gt;\r\n        &lt;/execution&gt;\r\n    &lt;/executions&gt;\r\n&lt;/plugin&gt;</pre>\r\n<p>3.使用mvn package打包，直接可以打成可运行jar。</p>','2013-06-23 23:24:54',NULL,1,'\0',7,'<p>一个项目，Maven管理，引用了Spring的多个包，使用<a href=\"http://maven.apache.org/plugins/maven-assembly-plugin/\">Maven Assembly  Plugin</a>也就是mvn assembly:assembly命令进行打包，之后运行该jar时出现以下问题：</p>\r\n<p>Exception in thread &quot;main&quot;  org.springframework.beans.factory.parsing.BeanDefinitionParsingException:  Configuration problem: Unable to locate Spring NamespaceHandler for XML schema  namespace</p>\r\n<p>查了一下，发现这是Maven Assembly Plugin的一个bug&hellip;&hellip;</p>',0,'\0','',1);
/*!40000 ALTER TABLE `BLOG_BLOGS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `BLOG_BLOGVIEW`
--

DROP TABLE IF EXISTS `BLOG_BLOGVIEW`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BLOG_BLOGVIEW` (
  `BLOG_ID` int(11) NOT NULL,
  `VIEW` int(11) DEFAULT NULL,
  PRIMARY KEY (`BLOG_ID`),
  KEY `fk_BLOG_BLOGVIEW_1` (`BLOG_ID`),
  CONSTRAINT `fk_BLOG_BLOGVIEW_1` FOREIGN KEY (`BLOG_ID`) REFERENCES `BLOG_BLOGS` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BLOG_BLOGVIEW`
--

LOCK TABLES `BLOG_BLOGVIEW` WRITE;
/*!40000 ALTER TABLE `BLOG_BLOGVIEW` DISABLE KEYS */;
INSERT INTO `BLOG_BLOGVIEW` VALUES (9,1156),(10,880),(11,0),(12,3257),(13,1468),(14,3682),(15,795),(16,2646),(17,1391),(18,651),(19,1818),(20,820),(21,905),(22,1367),(23,1527),(24,707),(25,570),(26,836),(27,997),(28,738),(29,716),(30,454),(31,476),(32,169);
/*!40000 ALTER TABLE `BLOG_BLOGVIEW` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `BLOG_CATEGORYS`
--

DROP TABLE IF EXISTS `BLOG_CATEGORYS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BLOG_CATEGORYS` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CATEGORY` varchar(255) NOT NULL DEFAULT '',
  `ORDERNUM` int(11) DEFAULT '0',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COMMENT='InnoDB free: 10240 kB';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BLOG_CATEGORYS`
--

LOCK TABLES `BLOG_CATEGORYS` WRITE;
/*!40000 ALTER TABLE `BLOG_CATEGORYS` DISABLE KEYS */;
INSERT INTO `BLOG_CATEGORYS` VALUES (7,'TECH',0),(8,'DIARY',1);
/*!40000 ALTER TABLE `BLOG_CATEGORYS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `BLOG_COMMENTS`
--

DROP TABLE IF EXISTS `BLOG_COMMENTS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BLOG_COMMENTS` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CONTENT` text NOT NULL,
  `BLOG_ID` int(11) DEFAULT NULL,
  `COMMENTDATE` datetime DEFAULT NULL,
  `QUOTECOMMENT_ID` int(11) DEFAULT NULL,
  `NICKNAME` varchar(50) DEFAULT NULL,
  `EMAIL` varchar(50) DEFAULT NULL,
  `HOMEPAGE` varchar(100) DEFAULT NULL,
  `QQ` varchar(20) DEFAULT NULL,
  `MSN` varchar(50) DEFAULT NULL,
  `USER_ID` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `QUOTECOMMENT_ID` (`QUOTECOMMENT_ID`),
  KEY `BLOG_ID` (`BLOG_ID`),
  KEY `FK89994DF1FAE673D8` (`USER_ID`),
  KEY `FK89994DF125D5078` (`BLOG_ID`),
  CONSTRAINT `blog_comments_fk_blog` FOREIGN KEY (`BLOG_ID`) REFERENCES `BLOG_BLOGS` (`ID`),
  CONSTRAINT `blog_comments_fk_quotecomment` FOREIGN KEY (`QUOTECOMMENT_ID`) REFERENCES `BLOG_COMMENTS` (`ID`),
  CONSTRAINT `FK89994DF125D5078` FOREIGN KEY (`BLOG_ID`) REFERENCES `BLOG_BLOGS` (`ID`),
  CONSTRAINT `FK89994DF1FAE673D8` FOREIGN KEY (`USER_ID`) REFERENCES `BLOG_USERS` (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=107 DEFAULT CHARSET=utf8 COMMENT='InnoDB free: 10240 kB;';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BLOG_COMMENTS`
--

LOCK TABLES `BLOG_COMMENTS` WRITE;
/*!40000 ALTER TABLE `BLOG_COMMENTS` DISABLE KEYS */;
INSERT INTO `BLOG_COMMENTS` VALUES (34,'<p>嗯嗯，其实我根本看不懂你在干什么。。。</p><h3>ADMIN Reply:哈哈，你要能看懂那我还混啥啊。。。</h3>',9,'2010-01-10 11:44:37',NULL,'项半仙',NULL,NULL,NULL,NULL,NULL),(35,'老梅加油,不管如何，总是做成了<h3>ADMIN Reply:哎呀妈呀，谢谢啊，感动得眼泪哗哗滴……你6#124哪个床的？</h3>',10,'2010-01-13 10:47:36',NULL,'6#124',NULL,NULL,NULL,NULL,NULL),(76,'您好，我刚开始学习webservice,能否把你的工程文件打包发给小弟学习学习？谢谢了',16,'2010-10-18 18:19:16',NULL,'小雄',NULL,NULL,NULL,NULL,NULL),(77,'忘了说：我邮箱<a href=\"mailto:554314337@qq.com\">554314337@qq.com</a>.谢谢啦<h3>ADMIN Reply:好的……呃，让我找找……</h3>',16,'2010-10-18 18:20:12',NULL,'小雄',NULL,NULL,NULL,NULL,NULL),(93,'<p>真得假的啊<img alt=\"\" src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/60.gif\" />这个博客网是你自己设计完成的<br />\r\n&nbsp;</p><h3>ADMIN Reply:呵呵，这倒是真的……当然除了界面，我不是美工……</h3>',9,'2010-10-19 09:05:09',NULL,'fzqdream',NULL,NULL,NULL,NULL,NULL),(94,'请问一下楼主，你这个例子只是单一张表的情况，如果存在一对多关联的表，如何处理呢？貌似无法使用lazy load了，因为前台远程调用服务时，hibernate的session已经关闭了。<br />',14,'2010-11-19 09:10:22',NULL,'Jacky','jackyliu@digitalrev.com',NULL,NULL,NULL,NULL),(95,'回楼上，我还真没找到一劳永逸解决webservice下lazy-load的简单方法。目前的解决是将数据对象转为扁平的DTO传送，需要获取关联对象的时候再根据关联参数通过方法去读取。',14,'2010-11-23 22:54:02',NULL,'admin','admin@eyougo.com',NULL,NULL,NULL,NULL),(96,'<p>能否把你的工程文件打包发给我学习学习,谢谢<br />\r\n<br />\r\n我的邮箱 <a href=\"mailto:wangqfg@163.com\">wangqfg@163.com</a></p>',16,'2011-02-10 18:49:21',NULL,'小Q','wangqfg@163.com',NULL,NULL,NULL,NULL),(97,'刚才邮箱写错了<br />\r\n<br />\r\n应该是这个: wanqfg@163.com',16,'2011-02-10 18:51:07',NULL,'小Q','wanqfg@163.com',NULL,NULL,NULL,NULL),(98,'你好，能把项目源码发一份给我吗？谢谢。<br />\r\n邮箱：<a href=\"mailto:longchao5@163.com\">longchao5@163.com</a>',16,'2011-05-03 16:55:47',NULL,'小龙','longchao5@163.com',NULL,NULL,NULL,NULL),(99,'&nbsp;你好 我也想要源代码 谢谢了1156662435@qq.com',16,'2011-07-11 17:11:08',NULL,'物非','1156662435@qq.com',NULL,NULL,NULL,NULL),(100,'你好，有项目原代码吗？能给我一分不？<br />\r\n<a href=\"mailto:niusr@softroad.com.cn\">niusr@softroad.com.cn</a>',14,'2012-05-08 13:08:32',NULL,'niusr','niusr@softroad.com.cn',NULL,NULL,NULL,NULL),(101,'这本书不错，《代码大全》，解释了不少疑问。哈哈。&nbsp;',28,'2013-04-18 16:35:50',NULL,'EyouGo','',NULL,NULL,NULL,NULL);
/*!40000 ALTER TABLE `BLOG_COMMENTS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `BLOG_CONFIGS`
--

DROP TABLE IF EXISTS `BLOG_CONFIGS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BLOG_CONFIGS` (
  `ID` varchar(50) NOT NULL DEFAULT '',
  `CONFIGVALUE` text,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='InnoDB free: 10240 kB';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BLOG_CONFIGS`
--

LOCK TABLES `BLOG_CONFIGS` WRITE;
/*!40000 ALTER TABLE `BLOG_CONFIGS` DISABLE KEYS */;
INSERT INTO `BLOG_CONFIGS` VALUES ('ADMINPASSWORD','FAEF9A764235A9224F23EE5690410A51'),('BLOGCOPYRIGHT','Copyright © 2009-2012 EyouGo Studio'),('BLOGNAME','EyouGo Blog'),('BLOGTITLE','EyouGo Blog'),('ORIGINALNOTE','<span style=\"color:#0e9bfd\">本文为原创！版权所有，转载请注明出处~！</span>');
/*!40000 ALTER TABLE `BLOG_CONFIGS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `BLOG_LINKS`
--

DROP TABLE IF EXISTS `BLOG_LINKS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BLOG_LINKS` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `LINKNAME` varchar(255) DEFAULT NULL,
  `LINKURL` varchar(255) DEFAULT NULL,
  `LINKLOGO` varchar(255) DEFAULT NULL,
  `ISHOW` bit(1) DEFAULT NULL,
  `EMOTION` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='InnoDB free: 10240 kB;)';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BLOG_LINKS`
--

LOCK TABLES `BLOG_LINKS` WRITE;
/*!40000 ALTER TABLE `BLOG_LINKS` DISABLE KEYS */;
/*!40000 ALTER TABLE `BLOG_LINKS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `BLOG_MESSAGES`
--

DROP TABLE IF EXISTS `BLOG_MESSAGES`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BLOG_MESSAGES` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `TITLE` int(11) DEFAULT NULL,
  `CONTENT` text,
  `MESSAGEDATE` datetime DEFAULT NULL,
  `NICKNAME` varchar(255) DEFAULT NULL,
  `HOMEPAGE` varchar(255) DEFAULT NULL,
  `QQ` varchar(255) DEFAULT NULL,
  `EMAIL` varchar(255) DEFAULT NULL,
  `MSN` varchar(255) DEFAULT NULL,
  `USER_ID` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK91F67149FAE673D8` (`USER_ID`),
  CONSTRAINT `FK91F67149FAE673D8` FOREIGN KEY (`USER_ID`) REFERENCES `BLOG_USERS` (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8 COMMENT='InnoDB free: 10240 kB;)';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BLOG_MESSAGES`
--

LOCK TABLES `BLOG_MESSAGES` WRITE;
/*!40000 ALTER TABLE `BLOG_MESSAGES` DISABLE KEYS */;
INSERT INTO `BLOG_MESSAGES` VALUES (2,NULL,'<p>有啥话您就说，别客气&hellip;&hellip;</p>','2010-02-04 01:56:41','admin',NULL,'123123','admin@eyougo.com',NULL,NULL),(3,NULL,'诚征友情链接！留言即可！','2010-02-09 15:41:34','admin',NULL,'123123','admin@eyougo.com',NULL,NULL),(26,NULL,'<p>测试验证码</p>','2011-04-15 16:26:54','admin',NULL,'123123','admin@eyougo.com',NULL,NULL),(27,NULL,'<img src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/15.gif\" alt=\"\" /><img src=\"http://blog.eyougo.com/fckeditor/editor/images/smiley/qq2007/03.gif\" alt=\"\" />&nbsp;','2013-01-21 11:14:07','aadfs',NULL,'123123','asd@asdf.com',NULL,NULL);
/*!40000 ALTER TABLE `BLOG_MESSAGES` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `BLOG_USERS`
--

DROP TABLE IF EXISTS `BLOG_USERS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BLOG_USERS` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `USERNAME` varchar(20) NOT NULL DEFAULT '',
  `PASSWORD` varchar(40) NOT NULL DEFAULT '',
  `PWQUESTION` varchar(30) DEFAULT NULL,
  `PWANSWER` varchar(30) DEFAULT NULL,
  `ISADMIN` bit(1) DEFAULT b'0',
  `NICKNAME` varchar(50) DEFAULT NULL,
  `SEX` varchar(10) DEFAULT NULL,
  `EMAIL` varchar(50) DEFAULT NULL,
  `HOMEPAGE` varchar(100) DEFAULT NULL,
  `QQ` varchar(20) DEFAULT NULL,
  `MSN` varchar(50) DEFAULT NULL,
  `REGDATE` date DEFAULT NULL,
  `LASTLOGINDATE` date DEFAULT NULL,
  `LASTLOGINIP` varchar(20) DEFAULT NULL,
  `ISLOCK` bit(1) DEFAULT b'0',
  PRIMARY KEY (`ID`),
  UNIQUE KEY `USERNAME` (`USERNAME`),
  UNIQUE KEY `USERNAME_2` (`USERNAME`),
  UNIQUE KEY `USERNAME_3` (`USERNAME`),
  UNIQUE KEY `USERNAME_4` (`USERNAME`),
  UNIQUE KEY `USERNAME_5` (`USERNAME`),
  UNIQUE KEY `USERNAME_6` (`USERNAME`),
  UNIQUE KEY `USERNAME_7` (`USERNAME`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8 COMMENT='InnoDB free: 10240 kB';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BLOG_USERS`
--

LOCK TABLES `BLOG_USERS` WRITE;
/*!40000 ALTER TABLE `BLOG_USERS` DISABLE KEYS */;
INSERT INTO `BLOG_USERS` VALUES (1,'admin','B59C67BF196A4758191E42F76670CEBA',NULL,NULL,'','admin','Female','admin@eyougo.com','','123123','',NULL,'2012-09-14',NULL,'\0'),(15,'meihongyuan','FAEF9A764235A9224F23EE5690410A51',NULL,NULL,'\0','mei','Male','meihongyuan@163.com','','','','2010-01-12','2010-01-12',NULL,'\0'),(16,'zhangshitao','56740E9E34BF741B7C4AE136B669C4DD',NULL,NULL,'\0','zhangshitao','Male','zhangshizheng1988@126.com','','','','2011-01-13','2011-01-13',NULL,'\0'),(17,'lele','12BF65C22D6968EB0167ADF3A766C3E7',NULL,NULL,'\0','lele','Female','dengyule86@163.com','','','','2012-02-23','2012-02-23',NULL,'\0'),(18,'liuyf','96E79218965EB72C92A549DD5A330112',NULL,NULL,'\0','liuyf','Male','fund110@qq.com','','','','2012-02-28','2012-02-28',NULL,'\0'),(19,'arongzai','C72C02F44912C4A6AC3BA06C26A49EE0',NULL,NULL,'\0','阿牛','Male','niusr@softroad.com.cn','','','arongzai@hotmail.com','2012-05-10','2012-05-10',NULL,'\0');
/*!40000 ALTER TABLE `BLOG_USERS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `EYOUGO_COUNTERS`
--

DROP TABLE IF EXISTS `EYOUGO_COUNTERS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `EYOUGO_COUNTERS` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `USERNAME` varchar(32) NOT NULL DEFAULT '',
  `PASSWORD` varchar(32) NOT NULL DEFAULT '',
  `DAYCOUNT` int(11) NOT NULL DEFAULT '0',
  `WEEKCOUNT` int(11) NOT NULL DEFAULT '0',
  `MONTHCOUNT` int(11) NOT NULL DEFAULT '0',
  `TOTALCOUNT` int(11) NOT NULL DEFAULT '0',
  `REGISTERDATE` datetime DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `USERNAME` (`USERNAME`),
  UNIQUE KEY `PASSWORD` (`PASSWORD`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `EYOUGO_COUNTERS`
--

LOCK TABLES `EYOUGO_COUNTERS` WRITE;
/*!40000 ALTER TABLE `EYOUGO_COUNTERS` DISABLE KEYS */;
INSERT INTO `EYOUGO_COUNTERS` VALUES (1,'eyougo','smile1982',81,955,3252,57582,'2013-08-24 11:05:15'),(2,'test','1111',3,3,3,53,'2013-01-10 18:02:14');
/*!40000 ALTER TABLE `EYOUGO_COUNTERS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `c3p0TestTable`
--

DROP TABLE IF EXISTS `c3p0TestTable`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `c3p0TestTable` (
  `a` char(1) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `c3p0TestTable`
--

LOCK TABLES `c3p0TestTable` WRITE;
/*!40000 ALTER TABLE `c3p0TestTable` DISABLE KEYS */;
/*!40000 ALTER TABLE `c3p0TestTable` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2013-08-24 11:10:03
